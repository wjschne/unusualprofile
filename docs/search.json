[{"path":"https://wjschne.github.io/unusualprofile/articles/tutorial_unusualprofile.html","id":"univariate-outliers","dir":"Articles","previous_headings":"","what":"Univariate Outliers","title":"Introduction to the unusualprofile package","text":"univariate outlier far scores distribution. can easily spot large outlier histogram Figure 1. Figure 1: histogram univariate outlier. want quantify extremity univariate outlier, convert outlier z-score, indicates outlier’s distance population mean standard deviation units. case, outlier 10 standard deviations mean scores.","code":""},{"path":"https://wjschne.github.io/unusualprofile/articles/tutorial_unusualprofile.html","id":"multivariate-outliers","dir":"Articles","previous_headings":"","what":"Multivariate Outliers","title":"Introduction to the unusualprofile package","text":"univariate outlier refers single case single variable. multivariate outlier refers single row data consisting 2 variables. multivariate outlier might unusual particular variable, unusual pattern scores. example, Figure 2, red point unusual univariate context—just 1 standard deviation mean either variable. However, x y highly correlated, extremely rare data point differ 2 standard deviations. Figure 2: scatterplot multivariate outlier. Scatterplots great inspecting multivariate outliers small number variables. Unfortunately, scatterplots can display 2 3 variables time. different way view multivariate data show case profile scores connected lines. Figure 3, lines nearly flat—highly correlated variables means standard deviations generally produce flat profiles. multivariate outlier, red, clearly flat. Figure 3: two-variable violin plot multivariate outlier. Suppose four variables, standard normal. four variables correlate 0.99, profiles quite flat. However, red profile {1,1,−1,1} much less flat, making unusual context. Figure 4: four-variable violin plot multivariate outlier. Figure 4, red profile obviously unusual. However, yet tell exactly unusual . like measure multivariate extremity.","code":""},{"path":"https://wjschne.github.io/unusualprofile/articles/tutorial_unusualprofile.html","id":"quantifying-multivariate-extremity","dir":"Articles","previous_headings":"","what":"Quantifying Multivariate Extremity","title":"Introduction to the unusualprofile package","text":"simplest (ultimately unsatisfying) way measure profile’s multivariate extremity Euclidean distance. multidimensional extension Pythagorean Theorem, Euclidean distance square root sum squared differences dimension reference point. reference point interest usually vector means variable—centroid. Euclidean distance point p1 = (1,1,−1,1) centroid p2 = (0,0,0,0) (p1−p2)′(p1−p2)=(1−0)2+(1−0)2+(−1−0)2+(1−0)2=2\\sqrt{(p_1-p_2)'(p_1-p_2)}=\\sqrt{(1-0)^2+(1-0)^2+(-1-0)^2+(1-0)^2}=2 Euclidean distance point (1,1,1,1) centroid also 2, yet two variables highly correlated, point (1,1,−1,1) much unusual point (1,1,1,1). Though fairly simple calculate, Euclidean distance insensitive relationships among variables, making poor choice quantifying extremity profiles correlated variables. 1936, P. R. Mahalanobis introduced variant Euclidean distance accounts covariance variables. Conceptually, Mahalanobis distance Euclidean distance profile scores variables rotated rescaled fit principal component axes. principal components always uncorrelated, distances principal component space always meaning regardless relationships original variables. Computationally, principal components need calculated explicitly. simply need invert covariance matrix profile variables: dM=(X−μX)′ΣX−1(X−μX)d_{M}=\\sqrt{(X-\\mu_X)'\\Sigma_X^{-1}(X-\\mu_X)} dMd_M Mahalanobis distanceXX vector variable scoresμX\\mu_X vector variable means XX (.e., centroid XX)ΣX\\Sigma_X covariance matrix variables vector XX variables X normally distributed, essentially Mahalanobis distance creating principal component scores uncorrelated standard normal variates, squaring score, summing row scores. Adding squared uncorrelated standard normal variates just happens χ2 distribution made. degrees freedom χ2 distribution corresponds number standard normal variates squared summed. Thus, k normally distributed variables vector X, Mahalanobis distance squared vector X χ2 distribution k degrees freedom. mathematical notation: dM2∼χ2(k)d_M ^ 2 \\sim \\chi^2(k) Thus, can assume profile variables multivariate normal, can use cumulative distribution function χ2 distribution quantify unusual particular profile compares general population profiles. Suppose Mahalanobis distance row data 5 standard normal variates 15.5. cumulative distribution function χ2 distribution 5 degrees freedom 0.992. Thus, row data multivariate outlier.","code":""},{"path":"https://wjschne.github.io/unusualprofile/articles/tutorial_unusualprofile.html","id":"the-euclidean-distance","dir":"Articles","previous_headings":"","what":"The Euclidean Distance","title":"Introduction to the unusualprofile package","text":"simplest (ultimately unsatisfying) way measure profile’s multivariate extremity Euclidean distance. multidimensional extension Pythagorean Theorem, Euclidean distance square root sum squared differences dimension reference point. reference point interest usually vector means variable—centroid. Euclidean distance point p1 = (1,1,−1,1) centroid p2 = (0,0,0,0) (p1−p2)′(p1−p2)=(1−0)2+(1−0)2+(−1−0)2+(1−0)2=2\\sqrt{(p_1-p_2)'(p_1-p_2)}=\\sqrt{(1-0)^2+(1-0)^2+(-1-0)^2+(1-0)^2}=2 Euclidean distance point (1,1,1,1) centroid also 2, yet two variables highly correlated, point (1,1,−1,1) much unusual point (1,1,1,1). Though fairly simple calculate, Euclidean distance insensitive relationships among variables, making poor choice quantifying extremity profiles correlated variables.","code":""},{"path":"https://wjschne.github.io/unusualprofile/articles/tutorial_unusualprofile.html","id":"the-mahalanobis-distance","dir":"Articles","previous_headings":"","what":"The Mahalanobis Distance","title":"Introduction to the unusualprofile package","text":"1936, P. R. Mahalanobis introduced variant Euclidean distance accounts covariance variables. Conceptually, Mahalanobis distance Euclidean distance profile scores variables rotated rescaled fit principal component axes. principal components always uncorrelated, distances principal component space always meaning regardless relationships original variables. Computationally, principal components need calculated explicitly. simply need invert covariance matrix profile variables: dM=(X−μX)′ΣX−1(X−μX)d_{M}=\\sqrt{(X-\\mu_X)'\\Sigma_X^{-1}(X-\\mu_X)} dMd_M Mahalanobis distanceXX vector variable scoresμX\\mu_X vector variable means XX (.e., centroid XX)ΣX\\Sigma_X covariance matrix variables vector XX variables X normally distributed, essentially Mahalanobis distance creating principal component scores uncorrelated standard normal variates, squaring score, summing row scores. Adding squared uncorrelated standard normal variates just happens χ2 distribution made. degrees freedom χ2 distribution corresponds number standard normal variates squared summed. Thus, k normally distributed variables vector X, Mahalanobis distance squared vector X χ2 distribution k degrees freedom. mathematical notation: dM2∼χ2(k)d_M ^ 2 \\sim \\chi^2(k) Thus, can assume profile variables multivariate normal, can use cumulative distribution function χ2 distribution quantify unusual particular profile compares general population profiles. Suppose Mahalanobis distance row data 5 standard normal variates 15.5. cumulative distribution function χ2 distribution 5 degrees freedom 0.992. Thus, row data multivariate outlier.","code":""},{"path":"https://wjschne.github.io/unusualprofile/articles/tutorial_unusualprofile.html","id":"conditional-mahalanobis-distances","dir":"Articles","previous_headings":"","what":"Conditional Mahalanobis Distances","title":"Introduction to the unusualprofile package","text":"disadvantage Mahalanobis Distance treats principal component dimensions equivalently. highly correlated variables, first principal component (general factor) particular importance. might want distinguish cases unusual first principal component scores unusual remaining principal components. example, distribution 4 highly correlated standardized variables, point (4,4,4,4) unusual point unusual—four standard deviations mean. However, accounting extreme elevation, profile perfectly flat. , profile unusually elevated, modal profile shape. course, perfectly flat profile unusual different sense. extremely flat sense score equal mean extremely average. contrast, point (−4, 4, −4, 4) perfectly average elevation—scores average 0. , however, unusually uneven shape. One way define profile elevation create composite score sum profile variables. profiles produce composite score defined profile elevation. ease computation, profile variables composite score can re-scaled metric—preferably z-score metric. Figure 5: simple model standardized loadings Suppose compare profiles elevation different profile shapes. Imagine four standardized variables correlate according structural model ?@fig-one-dimensional. Table 1: Model-implied correlations among variables correlations among four variables Table 1. Suppose population profiles select subset cases profiles elevation 1 (.e., composite score z-score 1). Figure 6: Conditional distributions people composite score 1. Figure 6, two score profiles elevation 1 shown. red profile flat unremarkable, whereas blue profile unusually uneven. light gray vertical normal distribution left variable shows population distribution unselected profiles, darker gray normal distribution right shows conditional distributions selected profiles (.e., profiles elevation 1). Note X1 relatively narrow conditional distribution loading λ = 0.95 high, X4 relatively wide conditional distribution loading λ = 0.6 lower.","code":""},{"path":"https://wjschne.github.io/unusualprofile/articles/tutorial_unusualprofile.html","id":"distinguishing-profile-shape-from-profile-elevation","dir":"Articles","previous_headings":"","what":"Distinguishing Profile Shape from Profile Elevation","title":"Introduction to the unusualprofile package","text":"One way define profile elevation create composite score sum profile variables. profiles produce composite score defined profile elevation. ease computation, profile variables composite score can re-scaled metric—preferably z-score metric. Figure 5: simple model standardized loadings Suppose compare profiles elevation different profile shapes. Imagine four standardized variables correlate according structural model ?@fig-one-dimensional. Table 1: Model-implied correlations among variables correlations among four variables Table 1. Suppose population profiles select subset cases profiles elevation 1 (.e., composite score z-score 1). Figure 6: Conditional distributions people composite score 1. Figure 6, two score profiles elevation 1 shown. red profile flat unremarkable, whereas blue profile unusually uneven. light gray vertical normal distribution left variable shows population distribution unselected profiles, darker gray normal distribution right shows conditional distributions selected profiles (.e., profiles elevation 1). Note X1 relatively narrow conditional distribution loading λ = 0.95 high, X4 relatively wide conditional distribution loading λ = 0.6 lower.","code":""},{"path":"https://wjschne.github.io/unusualprofile/articles/tutorial_unusualprofile.html","id":"a-worked-example-with-a-simple-model","dir":"Articles","previous_headings":"","what":"A Worked Example with a Simple Model","title":"Introduction to the unusualprofile package","text":"Suppose among standard multivariate normal variables, profile scores XX: X={X1,X2,X3,X4}={2,3,1,2}.X=\\{X_1,X_2, X_3, X_4\\} = \\{2,3,1,2\\}. seen Figure 7, profile scores summarized composite score 2.30. Figure 7: Example profile standard multivariate normal distribution. can calculate Mahalanobis distance profiles elevation (.e., composite score)? show two ways. easier two methods use simstandard package create data unusualprofile package calculate conditional Mahalanobis distance. reference, also see everything “hand” using matrix algebra Calculations performed unusualprofile package vignette. First load several packages. simstandard package can create simulated multivariate normal data structural equation model. first step specify model using lavaan syntax: Using simstandard package, can find model-implied correlation matrix. Using model, can calculate composite scores profile data like : result single row data, observed test scores composite variable: Although can enter names variables cond_maha function hand, large models less tedious programmatically. select independent variable X_Composite: select dependent variables: Now use cond_maha function calculate conditional Mahalanobis distance. “independent” composite score can predicted perfectly dependent scores, specify using v_ind_composite parameter. simply predictor variables, specified using v_ind parameter. output cond_maha function can displayed plot function. Figure 8: profile z-scores context population distributions (darker gray) conditional distributions (lighter gray) controlling overall composite score. Figure 8, can see profile unusual 96.41% profiles elevation (.e., composite score z = 2.3). conditional Mahalanobis distance dependent variables 2.92, 21% smaller unconditional Mahalanobis distance dependent variables 3.72. Note Mahalanobis distance independent variable 2.3. added, squared conditional Mahalanobis distance squared Mahalanobis distance independent variable equal squared unconditional unconditional Mahalanobis distance dependent variables (within rounding error). 2.922+2.32=3.722dCM2+IndependentdM2=DependentdM2\\begin{align*} 2.92^2 + 2.3^2 &= 3.72^2 \\\\ d_{CM}^2 +  \\text{Independent}~d_M^2 &= \\text{Dependent}~d_M^2\\\\ \\end{align*} coincidence relationship resembles Pythagorean theorem. principal component space, distances form right triangle. However, equation holds true independent variables perfectly predicted dependent variables independent variables composites dependent variables. default, cond_maha function prints just important information. like see everything output cond_maha function, can use View str function see entire list.","code":"library(unusualprofile) library(dplyr) library(simstandard) model <- \"X =~ 0.95 * X_1 +                 0.90 * X_2 +                 0.85 * X_3 +                 0.60 * X_4\" # Model-implied correlations of all variables R_all <- simstandard::get_model_implied_correlations(model, composites = TRUE) R_all #>                   X_1       X_2       X_3       X_4 X_Composite #> X_1         1.0000000 0.8550000 0.8075000 0.5700000   0.9294705 #> X_2         0.8550000 1.0000000 0.7650000 0.5400000   0.9086239 #> X_3         0.8075000 0.7650000 1.0000000 0.5100000   0.8863396 #> X_4         0.5700000 0.5400000 0.5100000 1.0000000   0.7533527 #> X_Composite 0.9294705 0.9086239 0.8863396 0.7533527   1.0000000 # Create data.frame, and add the composite score d <- data.frame(   X_1 = 2,   X_2 = 3,   X_3 = 1,   X_4 = 2 ) %>%   simstandard::add_composite_scores(m = model) d #>   X_1 X_2 X_3 X_4 X_Composite #> 1   2   3   1   2    2.300314 # Independent composite variable names v_X_composite <- d %>%   select(ends_with(\"Composite\")) %>%   colnames  v_X_composite #> [1] \"X_Composite\" # Dependent variable names v_X <- d %>%   select(!ends_with(\"Composite\")) %>%   colnames  v_X #> [1] \"X_1\" \"X_2\" \"X_3\" \"X_4\" # Calculate the conditional Mahalanobis distance cm <- cond_maha(   data = d,   R = R_all,   v_dep = v_X,   v_ind_composites = v_X_composite )  cm #> Conditional Mahalanobis Distance = 2.9246, df = 3, p = 0.9641 plot(cm) View(cm) str(cm)"},{"path":"https://wjschne.github.io/unusualprofile/articles/tutorial_unusualprofile.html","id":"calculations-using-the-simstandard-and-unusualprofile-packages","dir":"Articles","previous_headings":"","what":"Calculations Using the simstandard and unusualprofile Packages","title":"Introduction to the unusualprofile package","text":"First load several packages. simstandard package can create simulated multivariate normal data structural equation model. first step specify model using lavaan syntax: Using simstandard package, can find model-implied correlation matrix. Using model, can calculate composite scores profile data like : result single row data, observed test scores composite variable: Although can enter names variables cond_maha function hand, large models less tedious programmatically. select independent variable X_Composite: select dependent variables: Now use cond_maha function calculate conditional Mahalanobis distance. “independent” composite score can predicted perfectly dependent scores, specify using v_ind_composite parameter. simply predictor variables, specified using v_ind parameter. output cond_maha function can displayed plot function. Figure 8: profile z-scores context population distributions (darker gray) conditional distributions (lighter gray) controlling overall composite score. Figure 8, can see profile unusual 96.41% profiles elevation (.e., composite score z = 2.3). conditional Mahalanobis distance dependent variables 2.92, 21% smaller unconditional Mahalanobis distance dependent variables 3.72. Note Mahalanobis distance independent variable 2.3. added, squared conditional Mahalanobis distance squared Mahalanobis distance independent variable equal squared unconditional unconditional Mahalanobis distance dependent variables (within rounding error). 2.922+2.32=3.722dCM2+IndependentdM2=DependentdM2\\begin{align*} 2.92^2 + 2.3^2 &= 3.72^2 \\\\ d_{CM}^2 +  \\text{Independent}~d_M^2 &= \\text{Dependent}~d_M^2\\\\ \\end{align*} coincidence relationship resembles Pythagorean theorem. principal component space, distances form right triangle. However, equation holds true independent variables perfectly predicted dependent variables independent variables composites dependent variables.","code":"library(unusualprofile) library(dplyr) library(simstandard) model <- \"X =~ 0.95 * X_1 +                 0.90 * X_2 +                 0.85 * X_3 +                 0.60 * X_4\" # Model-implied correlations of all variables R_all <- simstandard::get_model_implied_correlations(model, composites = TRUE) R_all #>                   X_1       X_2       X_3       X_4 X_Composite #> X_1         1.0000000 0.8550000 0.8075000 0.5700000   0.9294705 #> X_2         0.8550000 1.0000000 0.7650000 0.5400000   0.9086239 #> X_3         0.8075000 0.7650000 1.0000000 0.5100000   0.8863396 #> X_4         0.5700000 0.5400000 0.5100000 1.0000000   0.7533527 #> X_Composite 0.9294705 0.9086239 0.8863396 0.7533527   1.0000000 # Create data.frame, and add the composite score d <- data.frame(   X_1 = 2,   X_2 = 3,   X_3 = 1,   X_4 = 2 ) %>%   simstandard::add_composite_scores(m = model) d #>   X_1 X_2 X_3 X_4 X_Composite #> 1   2   3   1   2    2.300314 # Independent composite variable names v_X_composite <- d %>%   select(ends_with(\"Composite\")) %>%   colnames  v_X_composite #> [1] \"X_Composite\" # Dependent variable names v_X <- d %>%   select(!ends_with(\"Composite\")) %>%   colnames  v_X #> [1] \"X_1\" \"X_2\" \"X_3\" \"X_4\" # Calculate the conditional Mahalanobis distance cm <- cond_maha(   data = d,   R = R_all,   v_dep = v_X,   v_ind_composites = v_X_composite )  cm #> Conditional Mahalanobis Distance = 2.9246, df = 3, p = 0.9641 plot(cm)"},{"path":"https://wjschne.github.io/unusualprofile/articles/tutorial_unusualprofile.html","id":"view-complete-output-of-cond_maha-function","dir":"Articles","previous_headings":"","what":"View Complete Output of cond_maha Function","title":"Introduction to the unusualprofile package","text":"default, cond_maha function prints just important information. like see everything output cond_maha function, can use View str function see entire list.","code":"View(cm) str(cm)"},{"path":"https://wjschne.github.io/unusualprofile/articles/tutorial_unusualprofile.html","id":"a-worked-example-with-a-more-complex-model","dir":"Articles","previous_headings":"","what":"A Worked Example with a More Complex Model","title":"Introduction to the unusualprofile package","text":"Figure 9: General Comprehension/Knowledge (Gc) General Auditory Processing (Ga) Predict Reading Decoding Reading Comprehension Suppose simplified model reading ability predictors shown Figure 9. two predictors reading ability General Comprehension/Knowledge (Gc) General Auditory Processing (Ga). cognitive abilities precursor abilities Reading Decoding (RD) Reading Comprehension (RC). Ga stronger predictor RD RC. Gc, reverse true. cognitive academic ability measured three tests . want know person’s pattern reading scores unusual, given cognitive scores. load packages need. can use lavaan syntax specify standardized coefficients model. enter standard scores (Mean = 100, SD = 15) single person. convert standard score z-scores. Finally, use simstandard package’s add_composite_scores add_factor_scores function add composite scores estimated factor scores data frame. Table 2: Case Scores Figure 10: Case Scores Suppose want know academic performance scores unusual, given cognitive predictor scores. variable names cognitive predictors reading ability scores can specified like : Now let’s see academic scores unusual controlling cognitive predictors: Controlling cognitive predictors, alter conclusion reading profile unusual. appears Reading scores unusual 18% Reading profiles people specified cognitive predictor scores. can see three decoding tests lower expectations, particularly RD2, reading comprehension tests within expectations, though RC3 somewhat high. Figure 11: Conditional Distributions Reading, Controlling Cognitive Predictors","code":"d_case <- tibble(   Ga1 = 61,   Ga2 = 65,   Ga3 = 69,   Gc1 = 109,   Gc2 = 97,   Gc3 = 103,   RD1 = 77,   RD2 = 71,   RD3 = 81,   RC1 = 90,   RC2 = 94,   RC3 = 99 ) %>%   simstandard::add_factor_scores(m = m_reading,                                  mu = 100,                                  sigma = 15,                                  CI = TRUE) %>%   simstandard::add_composite_scores(m = m_reading, mu = 100, sigma = 15)  d_LB <-   select(d_case, ends_with(\"_LB\")) %>%   rename_with(~str_remove(., \"_FS\")) %>%   pivot_longer(cols = everything())  d_UB <-   select(d_case, ends_with(\"_UB\")) %>%   rename_with(~str_remove(., \"_FS\")) %>%   pivot_longer(cols = everything())  d_FS <-   select(d_case, ends_with(\"_FS\")) %>%   pivot_longer(cols = everything())  bind_rows(d_LB,           d_UB,           d_FS) %>%   separate(name, c(\"Ability\", \"Role\")) %>%   pivot_wider(names_from = Role, values_from = value) %>%   ggplot(aes(Ability, FS)) +   geom_point() +   geom_errorbar(aes(ymin = LB, ymax = UB), width = 0.1) library(tibble) library(tidyr) library(dplyr) library(simstandard) library(unusualprofile) # Model of Reading m_reading <- \" Ga =~ 0.83 * Ga1 + 0.92 * Ga2 + 0.95 * Ga3 Gc =~ 0.88 * Gc1 + 0.71 * Gc2 + 0.85 * Gc3 RD =~ 0.93 * RD1 + 0.87 * RD2 + 0.85 * RD3 RC =~ 0.91 * RC1 + 0.86 * RC2 + 0.90 * RC3 Ga ~~ 0.68 * Gc RD ~  0.57 * Ga + 0.33 * Gc RC ~  0.05 * Ga + 0.40 * Gc  + 0.43 * RD \" d_case <- tibble(   Ga1 = 61,   Ga2 = 65,   Ga3 = 69,   Gc1 = 109,   Gc2 = 97,   Gc3 = 103,   RD1 = 77,   RD2 = 71,   RD3 = 81,   RC1 = 90,   RC2 = 94,   RC3 = 99 ) %>%   simstandard::add_composite_scores(m = m_reading, mu = 100, sigma = 15) %>%   simstandard::add_factor_scores(m = m_reading, mu = 100, sigma = 15) v_cognitive <- c(paste0(\"Ga\", 1:3),                  paste0(\"Gc\", 1:3))  v_reading <- c(paste0(\"RD\", 1:3),                paste0(\"RC\", 1:3)) dCM <- cond_maha(   data = d_case,   R = simstandard::get_model_implied_correlations(m_reading),   mu = 100,   sigma = 15,   v_dep = v_reading,   v_ind = v_cognitive) plot(dCM)"},{"path":"https://wjschne.github.io/unusualprofile/articles/tutorial_unusualprofile.html","id":"conditional-mahalanobis-distances-with-indicator-scores-only","dir":"Articles","previous_headings":"","what":"Conditional Mahalanobis Distances with Indicator Scores Only","title":"Introduction to the unusualprofile package","text":"Suppose want know academic performance scores unusual, given cognitive predictor scores. variable names cognitive predictors reading ability scores can specified like : Now let’s see academic scores unusual controlling cognitive predictors: Controlling cognitive predictors, alter conclusion reading profile unusual. appears Reading scores unusual 18% Reading profiles people specified cognitive predictor scores. can see three decoding tests lower expectations, particularly RD2, reading comprehension tests within expectations, though RC3 somewhat high. Figure 11: Conditional Distributions Reading, Controlling Cognitive Predictors","code":"v_cognitive <- c(paste0(\"Ga\", 1:3),                  paste0(\"Gc\", 1:3))  v_reading <- c(paste0(\"RD\", 1:3),                paste0(\"RC\", 1:3)) dCM <- cond_maha(   data = d_case,   R = simstandard::get_model_implied_correlations(m_reading),   mu = 100,   sigma = 15,   v_dep = v_reading,   v_ind = v_cognitive) plot(dCM)"},{"path":"https://wjschne.github.io/unusualprofile/articles/tutorial_unusualprofile.html","id":"composite-score-model","dir":"Articles","previous_headings":"","what":"Composite Score Model","title":"Introduction to the unusualprofile package","text":"Often, need calculate composite scores see within expectations. First, specify composite score variable names d_case tibble. Now plot composite scores: Figure 12: Conditional Distributions Reading Composites, Controlling Cognitive Composites","code":"# Independent variable names v_cognitive_composite <- paste0(c(\"Ga\", \"Gc\"), \"_Composite\") # Dependent variable names v_reading_composite <- paste0(c(\"RD\", \"RC\"), \"_Composite\") # Conditional Reading Profile cond_maha(data = d_case,           R = get_model_implied_correlations(m_reading, composites = TRUE),           v_dep = v_reading_composite,           v_ind = v_cognitive_composite,           mu = 100,           sigma = 15) %>%   plot()"},{"path":"https://wjschne.github.io/unusualprofile/articles/tutorial_unusualprofile.html","id":"observed-scores-given-composite-scores","dir":"Articles","previous_headings":"","what":"Observed Scores, Given Composite Scores","title":"Introduction to the unusualprofile package","text":"Suppose want know observed Gc scores unusual, given composite Gc score estimated. Figure 13 Factor scores can calculated calculated using Thurstone’s method (Thurstone, 1935): F̂=RFFΛFXRXX−1X=RFXRXX−1X\\hat{F}= R_{FF}\\Lambda_{FX} R_{XX}^{-1}X=R_{FX}R_{XX}^{-1}X F̂\\hat{F} vector person’s estimated factor scores.RFFR_{FF} correlation matrix among latent factors.ΛFX\\Lambda_{FX} matrix loadings factors observed scores.RFXR_{FX} correlation matrix common factors observed variables.RXX−1R_{XX}^{-1} inverse correlation matrix among observed variables.XX vector person’s standardized scores observed variables. Fortunately, add_factor_scores function simstandard package can add factor scores existing data. latent variable model, factor score “_FS” appended variable name. Using option CI = TRUE produce lower bounds (“_FS_LB”) upper bounds (“_FS_UB”) factor scores’ confidence intervals. factor scores estimates, presented confidence intervals Figure 14. Figure 14: Estimated factor scores 95% confidence intervals two ways can think factor scores. one perspective, composite scores component given different weight. example, make factor scores reading model, one use factor-score coefficients presented Figure 15. matrix factor-score coefficients can obtained like : Figure 15: Factor score coefficients reading model Ga=.136Ga1+.305Ga2+.496Ga3+.014Gc1+.005Gc2+.011Gc3+.041RD1+.021RD2+.018RD3+.007RC1+.004RC2+.006RC3 \\begin{split} \\text{Ga}=&.136\\text{Ga}_1&+.305\\text{Ga}_2&+.496\\text{Ga}_3&+\\\\ &.014\\text{Gc}_1&+.005\\text{Gc}_2&+.011\\text{Gc}_3&+\\\\ &.041\\text{RD}_1&+.021\\text{RD}_2&+.018\\text{RD}_3&+\\\\ &.007\\text{RC}_1&+.004\\text{RC}_2&+.006\\text{RC}_3 \\end{split} Factor scores generally smaller standard deviation latent scores estimate. Instead, standard deviation proportional validity. factor score measures latent score poorly, strongly regresses mean, resulting much smaller variance latent variable.  second interpretation factor scores best estimates latent variable. , get model-implied correlation matrix observed latent variables (instead factor score estimates). Figure 16: Scores Conditions Estimated Latent Scores Note rename factor score variables Ga_FS, Gc_FS, RD_FS, RC_FS Ga, Gc, RD, RC. addition, latent variables longer composite variables, independent variables.","code":"cond_maha(   d_case,   R = get_model_implied_correlations(m_reading, composites = TRUE),   v_dep = c(v_cognitive, v_reading),   v_ind = c(v_cognitive_composite, v_reading_composite),   mu = 100,   sigma = 15 ) %>%   plot() +   theme(axis.text.x = element_text(angle = 45, hjust = 1)) d_case <- tibble(   Ga1 = 61,   Ga2 = 69,   Ga3 = 65,   Gc1 = 109,   Gc2 = 97,   Gc3 = 103,   RD1 = 77,   RD2 = 71,   RD3 = 81,   RC1 = 90,   RC2 = 99,   RC3 = 94 ) %>%   simstandard::add_factor_scores(m = m_reading,                                  mu = 100,                                  sigma = 15,                                  CI = TRUE)  d_case %>%   select(contains(\"_FS\")) %>%   pivot_longer(everything(),                names_to = \"Variable\",                values_to = \"Score\") %>%   arrange(Variable) #> # A tibble: 12 × 2 #>    Variable Score #>    <chr>    <dbl> #>  1 Ga_FS     66.0 #>  2 Ga_FS_LB  59.4 #>  3 Ga_FS_UB  72.7 #>  4 Gc_FS     99.6 #>  5 Gc_FS_LB  90.1 #>  6 Gc_FS_UB 109.  #>  7 RC_FS     91.9 #>  8 RC_FS_LB  84.2 #>  9 RC_FS_UB  99.6 #> 10 RD_FS     75.4 #> 11 RD_FS_LB  67.9 #> 12 RD_FS_UB  82.8 simstandard::get_factor_score_coefficients(m_reading) # Correlation matrix R_factor <- get_model_implied_correlations(m_reading,                                            factor_scores = TRUE) # Factor Score Validity fs_validity <- get_factor_score_validity(m_reading)  # Model names m_names <- get_model_names(m_reading)  # Observed score names ob_names <- m_names$v_observed  # Factor Score names fs_names <- m_names$v_factor_score  # Standard Deviations s <- 15 * c(rep(1, length(ob_names)), fs_validity) names(s) <- c(ob_names, names(fs_validity))  # Plot cond_maha(   d_case,   R = R_factor,   mu = 100,   sigma = s,   v_dep = ob_names,   v_ind_composites = fs_names ) %>%   plot() # Get model-implied correlations of observed and latent variables R_latent <- get_model_implied_correlations(m_reading, latent = TRUE)  # Latent variable names v_latent <- m_names$v_latent  # Plot d_case %>%   rename_with(.fn = ~ str_remove(.x, \"_FS$\")) %>%   cond_maha(     R = R_latent,     mu = 100,     sigma = 15,     v_dep = ob_names,     v_ind = v_latent   ) %>%   plot()"},{"path":"https://wjschne.github.io/unusualprofile/articles/tutorial_unusualprofile.html","id":"factor-score-model","dir":"Articles","previous_headings":"","what":"Factor-score model","title":"Introduction to the unusualprofile package","text":"Factor scores can calculated calculated using Thurstone’s method (Thurstone, 1935): F̂=RFFΛFXRXX−1X=RFXRXX−1X\\hat{F}= R_{FF}\\Lambda_{FX} R_{XX}^{-1}X=R_{FX}R_{XX}^{-1}X F̂\\hat{F} vector person’s estimated factor scores.RFFR_{FF} correlation matrix among latent factors.ΛFX\\Lambda_{FX} matrix loadings factors observed scores.RFXR_{FX} correlation matrix common factors observed variables.RXX−1R_{XX}^{-1} inverse correlation matrix among observed variables.XX vector person’s standardized scores observed variables. Fortunately, add_factor_scores function simstandard package can add factor scores existing data. latent variable model, factor score “_FS” appended variable name. Using option CI = TRUE produce lower bounds (“_FS_LB”) upper bounds (“_FS_UB”) factor scores’ confidence intervals. factor scores estimates, presented confidence intervals Figure 14. Figure 14: Estimated factor scores 95% confidence intervals two ways can think factor scores. one perspective, composite scores component given different weight. example, make factor scores reading model, one use factor-score coefficients presented Figure 15. matrix factor-score coefficients can obtained like : Figure 15: Factor score coefficients reading model Ga=.136Ga1+.305Ga2+.496Ga3+.014Gc1+.005Gc2+.011Gc3+.041RD1+.021RD2+.018RD3+.007RC1+.004RC2+.006RC3 \\begin{split} \\text{Ga}=&.136\\text{Ga}_1&+.305\\text{Ga}_2&+.496\\text{Ga}_3&+\\\\ &.014\\text{Gc}_1&+.005\\text{Gc}_2&+.011\\text{Gc}_3&+\\\\ &.041\\text{RD}_1&+.021\\text{RD}_2&+.018\\text{RD}_3&+\\\\ &.007\\text{RC}_1&+.004\\text{RC}_2&+.006\\text{RC}_3 \\end{split} Factor scores generally smaller standard deviation latent scores estimate. Instead, standard deviation proportional validity. factor score measures latent score poorly, strongly regresses mean, resulting much smaller variance latent variable.  second interpretation factor scores best estimates latent variable. , get model-implied correlation matrix observed latent variables (instead factor score estimates). Figure 16: Scores Conditions Estimated Latent Scores Note rename factor score variables Ga_FS, Gc_FS, RD_FS, RC_FS Ga, Gc, RD, RC. addition, latent variables longer composite variables, independent variables.","code":"d_case <- tibble(   Ga1 = 61,   Ga2 = 69,   Ga3 = 65,   Gc1 = 109,   Gc2 = 97,   Gc3 = 103,   RD1 = 77,   RD2 = 71,   RD3 = 81,   RC1 = 90,   RC2 = 99,   RC3 = 94 ) %>%   simstandard::add_factor_scores(m = m_reading,                                  mu = 100,                                  sigma = 15,                                  CI = TRUE)  d_case %>%   select(contains(\"_FS\")) %>%   pivot_longer(everything(),                names_to = \"Variable\",                values_to = \"Score\") %>%   arrange(Variable) #> # A tibble: 12 × 2 #>    Variable Score #>    <chr>    <dbl> #>  1 Ga_FS     66.0 #>  2 Ga_FS_LB  59.4 #>  3 Ga_FS_UB  72.7 #>  4 Gc_FS     99.6 #>  5 Gc_FS_LB  90.1 #>  6 Gc_FS_UB 109.  #>  7 RC_FS     91.9 #>  8 RC_FS_LB  84.2 #>  9 RC_FS_UB  99.6 #> 10 RD_FS     75.4 #> 11 RD_FS_LB  67.9 #> 12 RD_FS_UB  82.8 simstandard::get_factor_score_coefficients(m_reading) # Correlation matrix R_factor <- get_model_implied_correlations(m_reading,                                            factor_scores = TRUE) # Factor Score Validity fs_validity <- get_factor_score_validity(m_reading)  # Model names m_names <- get_model_names(m_reading)  # Observed score names ob_names <- m_names$v_observed  # Factor Score names fs_names <- m_names$v_factor_score  # Standard Deviations s <- 15 * c(rep(1, length(ob_names)), fs_validity) names(s) <- c(ob_names, names(fs_validity))  # Plot cond_maha(   d_case,   R = R_factor,   mu = 100,   sigma = s,   v_dep = ob_names,   v_ind_composites = fs_names ) %>%   plot() # Get model-implied correlations of observed and latent variables R_latent <- get_model_implied_correlations(m_reading, latent = TRUE)  # Latent variable names v_latent <- m_names$v_latent  # Plot d_case %>%   rename_with(.fn = ~ str_remove(.x, \"_FS$\")) %>%   cond_maha(     R = R_latent,     mu = 100,     sigma = 15,     v_dep = ob_names,     v_ind = v_latent   ) %>%   plot()"},{"path":[]},{"path":"https://wjschne.github.io/unusualprofile/articles/unusualprofile_calculations.html","id":"calculate-composite-scores","dir":"Articles","previous_headings":"","what":"Calculate composite scores","title":"Calculations performed by the unusualprofile package","text":"calculate standardized composite score zCz_C, add variable’s deviation mean divide square root sum observed score covariance matrix. zC=1′(X−μX)1′ΣX1z_C=\\frac{1'(X-\\mu_X)}{\\sqrt{1'\\Sigma_X1}} zCz_C standardized composite score.XX vector observed scores.μX\\mu_X vector means XX variables.ΣX\\Sigma_X covariance matrix XX variables.11 vector ones compatible ΣX\\Sigma_X. composite score :","code":"# Population means of observed variables mu_X <- rep_along(X, 0)  # Population standard deviations of observed variables sd_X <- rep_along(X, 1)  # Covariance Matrix Sigma_X <- diag(sd_X) %*% R_X %*% diag(sd_X)  # Vector of ones ones <- rep_along(X, 1)  # Standardized composite score z_C <- c(ones %*% (X - mu_X) / sqrt(ones %*% (Sigma_X) %*% ones))"},{"path":"https://wjschne.github.io/unusualprofile/articles/unusualprofile_calculations.html","id":"estimate-expected-test-scores-conditioned-on-a-composite-score","dir":"Articles","previous_headings":"","what":"Estimate expected test scores conditioned on a composite score","title":"Calculations performed by the unusualprofile package","text":"Given particular composite score, need calculate predicted score. , composite score 1.5 standard deviations mean, expected subtest scores? X̂=σXzCrXXC+μX\\hat{X}=\\sigma_Xz_Cr_{XX_C}+\\mu_X X̂\\hat{X} vector expected subtest scoresσX\\sigma_X vector standard deviations XXzCz_C composite scorerXXCr_{XX_C} vector correlations variable XX composite score zCz_CμX\\mu_X vector means XX Thus,","code":"# Predicted value of X, given composite score X_hat <- sd_X * z_C * R_all[v_observed, v_composite] + mu_X"},{"path":"https://wjschne.github.io/unusualprofile/articles/unusualprofile_calculations.html","id":"calculating-the-conditional-mahalanobis-distance","dir":"Articles","previous_headings":"","what":"Calculating the Conditional Mahalanobis Distance","title":"Calculations performed by the unusualprofile package","text":"dMC=(X−X̂)′ΣX−1(X−X̂)d_{M_C}=\\sqrt{\\left(X-\\hat{X}\\right)'\\Sigma_{X}^{-1}\\left(X-\\hat{X}\\right)} dMCd_{M_C} Conditional Mahalanobis DistanceXX vector subtest scoresX̂\\hat{X} vector expected subtest scoresΣX\\Sigma_{X} covariance matrix subtest scores Suppose k outcome scores, j composite scores used calculate expected scores X̂\\hat{X}. multivariate normality subtest scores can assumed, Conditional Mahalanobis Distance squared χ2 distribution k − j degrees freedom. dMC2∼χ2(k−j)d_{M_C}^{2} \\sim\\chi^{2}(k-j) can assume observed variables X multivariate normal, profile X = {2,3,1,2} unusual 96% profiles also composite score zC = 2.3.","code":"d_mc <- c(sqrt(t(X - X_hat) %*% solve(Sigma_X) %*% (X - X_hat))) d_mc #> [1] 2.9246 # Number of observed variables k <- length(v_observed)  # Number of composite variables j <- length(v_composite)  # Cumulative distribution function p <- pchisq(d_mc ^ 2, df = k - j) p #> [1] 0.9641406"},{"path":"https://wjschne.github.io/unusualprofile/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"W. Joel Schneider. Author, maintainer. Feng Ji. Author.","code":""},{"path":"https://wjschne.github.io/unusualprofile/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Schneider W, Ji F (2025). unusualprofile: Calculates Conditional Mahalanobis Distances. R package version 0.1.4, https://github.com/wjschne/unusualprofile.","code":"@Manual{,   title = {unusualprofile: Calculates Conditional Mahalanobis Distances},   author = {W. Joel Schneider and Feng Ji},   year = {2025},   note = {R package version 0.1.4},   url = {https://github.com/wjschne/unusualprofile}, }"},{"path":"https://wjschne.github.io/unusualprofile/index.html","id":"unusualprofile-","dir":"","previous_headings":"","what":"Calculates Conditional Mahalanobis Distances","title":"Calculates Conditional Mahalanobis Distances","text":"goal unusualprofile calculate conditional Mahalanobis distances related statistics. statistics can help find cases unusual, even controlling specified predictors.","code":""},{"path":"https://wjschne.github.io/unusualprofile/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Calculates Conditional Mahalanobis Distances","text":"can install development version GitHub :","code":"# install.packages(\"remotes\") remotes::install_github(\"wjschne/unusualprofile\")"},{"path":"https://wjschne.github.io/unusualprofile/index.html","id":"example","dir":"","previous_headings":"","what":"Example","title":"Calculates Conditional Mahalanobis Distances","text":"use unusualprofile package, one needs know correlations, means, standard deviations among set continuous variables least one row data set variables. Suppose set variables following relationships: First, load unusualprofile package. Included unusualprofile package, d_example data set single row data generated path diagram depicted . Also included unusualprofile package path diagram’s model-implied correlation matrix:","code":"library(unusualprofile) #>        X_1     X_2      X_3      Y_1        Y_2      Y_3        X        Y #> 1 1.999498 1.44683 2.703249 1.664106 -0.8427126 1.811528 2.273441 1.201208 R_example #>       X_1  X_2   X_3   Y_1   Y_2   Y_3    X    Y #> X_1 1.000 0.35 0.560 0.336 0.294 0.378 0.70 0.42 #> X_2 0.350 1.00 0.400 0.240 0.210 0.270 0.50 0.30 #> X_3 0.560 0.40 1.000 0.384 0.336 0.432 0.80 0.48 #> Y_1 0.336 0.24 0.384 1.000 0.560 0.720 0.48 0.80 #> Y_2 0.294 0.21 0.336 0.560 1.000 0.630 0.42 0.70 #> Y_3 0.378 0.27 0.432 0.720 0.630 1.000 0.54 0.90 #> X   0.700 0.50 0.800 0.480 0.420 0.540 1.00 0.60 #> Y   0.420 0.30 0.480 0.800 0.700 0.900 0.60 1.00"},{"path":"https://wjschne.github.io/unusualprofile/index.html","id":"using-the-cond_maha-function","dir":"","previous_headings":"","what":"Using the cond_maha function","title":"Calculates Conditional Mahalanobis Distances","text":"can specify correlations (R), means (mu), standard deviations (sigma). independent variables (v_ind), dependent variables (v_dep). case, independent variables composite scores summarizing dependent variables.","code":"# Conditional Mahalanobis distance cm <- cond_maha(data = d_example,            R = R_example,           mu = 0,           sigma = 1,           v_ind_composites = c(\"X\", \"Y\"),           v_dep = c(\"X_1\", \"X_2\", \"X_3\",                     \"Y_1\", \"Y_2\", \"Y_3\"))  cm #> Conditional Mahalanobis Distance = 3.5167, df = 4, p = 0.9852  # Plot plot(cm)"},{"path":"https://wjschne.github.io/unusualprofile/index.html","id":"shiny-app","dir":"","previous_headings":"","what":"Shiny App","title":"Calculates Conditional Mahalanobis Distances","text":"user-friendly app performs functions unusualprofile package .","code":""},{"path":"https://wjschne.github.io/unusualprofile/index.html","id":"publication","dir":"","previous_headings":"","what":"Publication","title":"Calculates Conditional Mahalanobis Distances","text":"introduction applications conditional distributions Mahalanobis distances: Schneider, W. J., & Ji, F. (2023). Detecting unusual score patterns context relevant predictors. Journal Pediatric Neuropsychology, 9, 1–17. https://doi.org/10.1007/s40817-022-00137-x","code":""},{"path":"https://wjschne.github.io/unusualprofile/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"GNU General Public License","title":"GNU General Public License","text":"Version 3, 29 June 2007Copyright © 2007 Free Software Foundation, Inc. <http://fsf.org/> Everyone permitted copy distribute verbatim copies license document, changing allowed.","code":""},{"path":"https://wjschne.github.io/unusualprofile/LICENSE.html","id":"preamble","dir":"","previous_headings":"","what":"Preamble","title":"GNU General Public License","text":"GNU General Public License free, copyleft license software kinds works. licenses software practical works designed take away freedom share change works. contrast, GNU General Public License intended guarantee freedom share change versions program–make sure remains free software users. , Free Software Foundation, use GNU General Public License software; applies also work released way authors. can apply programs, . speak free software, referring freedom, price. General Public Licenses designed make sure freedom distribute copies free software (charge wish), receive source code can get want , can change software use pieces new free programs, know can things. protect rights, need prevent others denying rights asking surrender rights. Therefore, certain responsibilities distribute copies software, modify : responsibilities respect freedom others. example, distribute copies program, whether gratis fee, must pass recipients freedoms received. must make sure , , receive can get source code. must show terms know rights. Developers use GNU GPL protect rights two steps: (1) assert copyright software, (2) offer License giving legal permission copy, distribute /modify . developers’ authors’ protection, GPL clearly explains warranty free software. users’ authors’ sake, GPL requires modified versions marked changed, problems attributed erroneously authors previous versions. devices designed deny users access install run modified versions software inside , although manufacturer can . fundamentally incompatible aim protecting users’ freedom change software. systematic pattern abuse occurs area products individuals use, precisely unacceptable. Therefore, designed version GPL prohibit practice products. problems arise substantially domains, stand ready extend provision domains future versions GPL, needed protect freedom users. Finally, every program threatened constantly software patents. States allow patents restrict development use software general-purpose computers, , wish avoid special danger patents applied free program make effectively proprietary. prevent , GPL assures patents used render program non-free. precise terms conditions copying, distribution modification follow.","code":""},{"path":[]},{"path":"https://wjschne.github.io/unusualprofile/LICENSE.html","id":"id_0-definitions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"0. Definitions","title":"GNU General Public License","text":"“License” refers version 3 GNU General Public License. “Copyright” also means copyright-like laws apply kinds works, semiconductor masks. “Program” refers copyrightable work licensed License. licensee addressed “”. “Licensees” “recipients” may individuals organizations. “modify” work means copy adapt part work fashion requiring copyright permission, making exact copy. resulting work called “modified version” earlier work work “based ” earlier work. “covered work” means either unmodified Program work based Program. “propagate” work means anything , without permission, make directly secondarily liable infringement applicable copyright law, except executing computer modifying private copy. Propagation includes copying, distribution (without modification), making available public, countries activities well. “convey” work means kind propagation enables parties make receive copies. Mere interaction user computer network, transfer copy, conveying. interactive user interface displays “Appropriate Legal Notices” extent includes convenient prominently visible feature (1) displays appropriate copyright notice, (2) tells user warranty work (except extent warranties provided), licensees may convey work License, view copy License. interface presents list user commands options, menu, prominent item list meets criterion.","code":""},{"path":"https://wjschne.github.io/unusualprofile/LICENSE.html","id":"id_1-source-code","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"1. Source Code","title":"GNU General Public License","text":"“source code” work means preferred form work making modifications . “Object code” means non-source form work. “Standard Interface” means interface either official standard defined recognized standards body, , case interfaces specified particular programming language, one widely used among developers working language. “System Libraries” executable work include anything, work whole, () included normal form packaging Major Component, part Major Component, (b) serves enable use work Major Component, implement Standard Interface implementation available public source code form. “Major Component”, context, means major essential component (kernel, window system, ) specific operating system () executable work runs, compiler used produce work, object code interpreter used run . “Corresponding Source” work object code form means source code needed generate, install, (executable work) run object code modify work, including scripts control activities. However, include work’s System Libraries, general-purpose tools generally available free programs used unmodified performing activities part work. example, Corresponding Source includes interface definition files associated source files work, source code shared libraries dynamically linked subprograms work specifically designed require, intimate data communication control flow subprograms parts work. Corresponding Source need include anything users can regenerate automatically parts Corresponding Source. Corresponding Source work source code form work.","code":""},{"path":"https://wjschne.github.io/unusualprofile/LICENSE.html","id":"id_2-basic-permissions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"2. Basic Permissions","title":"GNU General Public License","text":"rights granted License granted term copyright Program, irrevocable provided stated conditions met. License explicitly affirms unlimited permission run unmodified Program. output running covered work covered License output, given content, constitutes covered work. License acknowledges rights fair use equivalent, provided copyright law. may make, run propagate covered works convey, without conditions long license otherwise remains force. may convey covered works others sole purpose make modifications exclusively , provide facilities running works, provided comply terms License conveying material control copyright. thus making running covered works must exclusively behalf, direction control, terms prohibit making copies copyrighted material outside relationship . Conveying circumstances permitted solely conditions stated . Sublicensing allowed; section 10 makes unnecessary.","code":""},{"path":"https://wjschne.github.io/unusualprofile/LICENSE.html","id":"id_3-protecting-users-legal-rights-from-anti-circumvention-law","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"3. Protecting Users’ Legal Rights From Anti-Circumvention Law","title":"GNU General Public License","text":"covered work shall deemed part effective technological measure applicable law fulfilling obligations article 11 WIPO copyright treaty adopted 20 December 1996, similar laws prohibiting restricting circumvention measures. convey covered work, waive legal power forbid circumvention technological measures extent circumvention effected exercising rights License respect covered work, disclaim intention limit operation modification work means enforcing, work’s users, third parties’ legal rights forbid circumvention technological measures.","code":""},{"path":"https://wjschne.github.io/unusualprofile/LICENSE.html","id":"id_4-conveying-verbatim-copies","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"4. Conveying Verbatim Copies","title":"GNU General Public License","text":"may convey verbatim copies Program’s source code receive , medium, provided conspicuously appropriately publish copy appropriate copyright notice; keep intact notices stating License non-permissive terms added accord section 7 apply code; keep intact notices absence warranty; give recipients copy License along Program. may charge price price copy convey, may offer support warranty protection fee.","code":""},{"path":"https://wjschne.github.io/unusualprofile/LICENSE.html","id":"id_5-conveying-modified-source-versions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"5. Conveying Modified Source Versions","title":"GNU General Public License","text":"may convey work based Program, modifications produce Program, form source code terms section 4, provided also meet conditions: ) work must carry prominent notices stating modified , giving relevant date. b) work must carry prominent notices stating released License conditions added section 7. requirement modifies requirement section 4 “keep intact notices”. c) must license entire work, whole, License anyone comes possession copy. License therefore apply, along applicable section 7 additional terms, whole work, parts, regardless packaged. License gives permission license work way, invalidate permission separately received . d) work interactive user interfaces, must display Appropriate Legal Notices; however, Program interactive interfaces display Appropriate Legal Notices, work need make . compilation covered work separate independent works, nature extensions covered work, combined form larger program, volume storage distribution medium, called “aggregate” compilation resulting copyright used limit access legal rights compilation’s users beyond individual works permit. Inclusion covered work aggregate cause License apply parts aggregate.","code":""},{"path":"https://wjschne.github.io/unusualprofile/LICENSE.html","id":"id_6-conveying-non-source-forms","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"6. Conveying Non-Source Forms","title":"GNU General Public License","text":"may convey covered work object code form terms sections 4 5, provided also convey machine-readable Corresponding Source terms License, one ways: ) Convey object code , embodied , physical product (including physical distribution medium), accompanied Corresponding Source fixed durable physical medium customarily used software interchange. b) Convey object code , embodied , physical product (including physical distribution medium), accompanied written offer, valid least three years valid long offer spare parts customer support product model, give anyone possesses object code either (1) copy Corresponding Source software product covered License, durable physical medium customarily used software interchange, price reasonable cost physically performing conveying source, (2) access copy Corresponding Source network server charge. c) Convey individual copies object code copy written offer provide Corresponding Source. alternative allowed occasionally noncommercially, received object code offer, accord subsection 6b. d) Convey object code offering access designated place (gratis charge), offer equivalent access Corresponding Source way place charge. need require recipients copy Corresponding Source along object code. place copy object code network server, Corresponding Source may different server (operated third party) supports equivalent copying facilities, provided maintain clear directions next object code saying find Corresponding Source. Regardless server hosts Corresponding Source, remain obligated ensure available long needed satisfy requirements. e) Convey object code using peer--peer transmission, provided inform peers object code Corresponding Source work offered general public charge subsection 6d. separable portion object code, whose source code excluded Corresponding Source System Library, need included conveying object code work. “User Product” either (1) “consumer product”, means tangible personal property normally used personal, family, household purposes, (2) anything designed sold incorporation dwelling. determining whether product consumer product, doubtful cases shall resolved favor coverage. particular product received particular user, “normally used” refers typical common use class product, regardless status particular user way particular user actually uses, expects expected use, product. product consumer product regardless whether product substantial commercial, industrial non-consumer uses, unless uses represent significant mode use product. “Installation Information” User Product means methods, procedures, authorization keys, information required install execute modified versions covered work User Product modified version Corresponding Source. information must suffice ensure continued functioning modified object code case prevented interfered solely modification made. convey object code work section , , specifically use , User Product, conveying occurs part transaction right possession use User Product transferred recipient perpetuity fixed term (regardless transaction characterized), Corresponding Source conveyed section must accompanied Installation Information. requirement apply neither third party retains ability install modified object code User Product (example, work installed ROM). requirement provide Installation Information include requirement continue provide support service, warranty, updates work modified installed recipient, User Product modified installed. Access network may denied modification materially adversely affects operation network violates rules protocols communication across network. Corresponding Source conveyed, Installation Information provided, accord section must format publicly documented (implementation available public source code form), must require special password key unpacking, reading copying.","code":""},{"path":"https://wjschne.github.io/unusualprofile/LICENSE.html","id":"id_7-additional-terms","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"7. Additional Terms","title":"GNU General Public License","text":"“Additional permissions” terms supplement terms License making exceptions one conditions. Additional permissions applicable entire Program shall treated though included License, extent valid applicable law. additional permissions apply part Program, part may used separately permissions, entire Program remains governed License without regard additional permissions. convey copy covered work, may option remove additional permissions copy, part . (Additional permissions may written require removal certain cases modify work.) may place additional permissions material, added covered work, can give appropriate copyright permission. Notwithstanding provision License, material add covered work, may (authorized copyright holders material) supplement terms License terms: ) Disclaiming warranty limiting liability differently terms sections 15 16 License; b) Requiring preservation specified reasonable legal notices author attributions material Appropriate Legal Notices displayed works containing ; c) Prohibiting misrepresentation origin material, requiring modified versions material marked reasonable ways different original version; d) Limiting use publicity purposes names licensors authors material; e) Declining grant rights trademark law use trade names, trademarks, service marks; f) Requiring indemnification licensors authors material anyone conveys material (modified versions ) contractual assumptions liability recipient, liability contractual assumptions directly impose licensors authors. non-permissive additional terms considered “restrictions” within meaning section 10. Program received , part , contains notice stating governed License along term restriction, may remove term. license document contains restriction permits relicensing conveying License, may add covered work material governed terms license document, provided restriction survive relicensing conveying. add terms covered work accord section, must place, relevant source files, statement additional terms apply files, notice indicating find applicable terms. Additional terms, permissive non-permissive, may stated form separately written license, stated exceptions; requirements apply either way.","code":""},{"path":"https://wjschne.github.io/unusualprofile/LICENSE.html","id":"id_8-termination","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"8. Termination","title":"GNU General Public License","text":"may propagate modify covered work except expressly provided License. attempt otherwise propagate modify void, automatically terminate rights License (including patent licenses granted third paragraph section 11). However, cease violation License, license particular copyright holder reinstated () provisionally, unless copyright holder explicitly finally terminates license, (b) permanently, copyright holder fails notify violation reasonable means prior 60 days cessation. Moreover, license particular copyright holder reinstated permanently copyright holder notifies violation reasonable means, first time received notice violation License (work) copyright holder, cure violation prior 30 days receipt notice. Termination rights section terminate licenses parties received copies rights License. rights terminated permanently reinstated, qualify receive new licenses material section 10.","code":""},{"path":"https://wjschne.github.io/unusualprofile/LICENSE.html","id":"id_9-acceptance-not-required-for-having-copies","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"9. Acceptance Not Required for Having Copies","title":"GNU General Public License","text":"required accept License order receive run copy Program. Ancillary propagation covered work occurring solely consequence using peer--peer transmission receive copy likewise require acceptance. However, nothing License grants permission propagate modify covered work. actions infringe copyright accept License. Therefore, modifying propagating covered work, indicate acceptance License .","code":""},{"path":"https://wjschne.github.io/unusualprofile/LICENSE.html","id":"id_10-automatic-licensing-of-downstream-recipients","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"10. Automatic Licensing of Downstream Recipients","title":"GNU General Public License","text":"time convey covered work, recipient automatically receives license original licensors, run, modify propagate work, subject License. responsible enforcing compliance third parties License. “entity transaction” transaction transferring control organization, substantially assets one, subdividing organization, merging organizations. propagation covered work results entity transaction, party transaction receives copy work also receives whatever licenses work party’s predecessor interest give previous paragraph, plus right possession Corresponding Source work predecessor interest, predecessor can get reasonable efforts. may impose restrictions exercise rights granted affirmed License. example, may impose license fee, royalty, charge exercise rights granted License, may initiate litigation (including cross-claim counterclaim lawsuit) alleging patent claim infringed making, using, selling, offering sale, importing Program portion .","code":""},{"path":"https://wjschne.github.io/unusualprofile/LICENSE.html","id":"id_11-patents","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"11. Patents","title":"GNU General Public License","text":"“contributor” copyright holder authorizes use License Program work Program based. work thus licensed called contributor’s “contributor version”. contributor’s “essential patent claims” patent claims owned controlled contributor, whether already acquired hereafter acquired, infringed manner, permitted License, making, using, selling contributor version, include claims infringed consequence modification contributor version. purposes definition, “control” includes right grant patent sublicenses manner consistent requirements License. contributor grants non-exclusive, worldwide, royalty-free patent license contributor’s essential patent claims, make, use, sell, offer sale, import otherwise run, modify propagate contents contributor version. following three paragraphs, “patent license” express agreement commitment, however denominated, enforce patent (express permission practice patent covenant sue patent infringement). “grant” patent license party means make agreement commitment enforce patent party. convey covered work, knowingly relying patent license, Corresponding Source work available anyone copy, free charge terms License, publicly available network server readily accessible means, must either (1) cause Corresponding Source available, (2) arrange deprive benefit patent license particular work, (3) arrange, manner consistent requirements License, extend patent license downstream recipients. “Knowingly relying” means actual knowledge , patent license, conveying covered work country, recipient’s use covered work country, infringe one identifiable patents country reason believe valid. , pursuant connection single transaction arrangement, convey, propagate procuring conveyance , covered work, grant patent license parties receiving covered work authorizing use, propagate, modify convey specific copy covered work, patent license grant automatically extended recipients covered work works based . patent license “discriminatory” include within scope coverage, prohibits exercise , conditioned non-exercise one rights specifically granted License. may convey covered work party arrangement third party business distributing software, make payment third party based extent activity conveying work, third party grants, parties receive covered work , discriminatory patent license () connection copies covered work conveyed (copies made copies), (b) primarily connection specific products compilations contain covered work, unless entered arrangement, patent license granted, prior 28 March 2007. Nothing License shall construed excluding limiting implied license defenses infringement may otherwise available applicable patent law.","code":""},{"path":"https://wjschne.github.io/unusualprofile/LICENSE.html","id":"id_12-no-surrender-of-others-freedom","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"12. No Surrender of Others’ Freedom","title":"GNU General Public License","text":"conditions imposed (whether court order, agreement otherwise) contradict conditions License, excuse conditions License. convey covered work satisfy simultaneously obligations License pertinent obligations, consequence may convey . example, agree terms obligate collect royalty conveying convey Program, way satisfy terms License refrain entirely conveying Program.","code":""},{"path":"https://wjschne.github.io/unusualprofile/LICENSE.html","id":"id_13-use-with-the-gnu-affero-general-public-license","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"13. Use with the GNU Affero General Public License","title":"GNU General Public License","text":"Notwithstanding provision License, permission link combine covered work work licensed version 3 GNU Affero General Public License single combined work, convey resulting work. terms License continue apply part covered work, special requirements GNU Affero General Public License, section 13, concerning interaction network apply combination .","code":""},{"path":"https://wjschne.github.io/unusualprofile/LICENSE.html","id":"id_14-revised-versions-of-this-license","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"14. Revised Versions of this License","title":"GNU General Public License","text":"Free Software Foundation may publish revised /new versions GNU General Public License time time. new versions similar spirit present version, may differ detail address new problems concerns. version given distinguishing version number. Program specifies certain numbered version GNU General Public License “later version” applies , option following terms conditions either numbered version later version published Free Software Foundation. Program specify version number GNU General Public License, may choose version ever published Free Software Foundation. Program specifies proxy can decide future versions GNU General Public License can used, proxy’s public statement acceptance version permanently authorizes choose version Program. Later license versions may give additional different permissions. However, additional obligations imposed author copyright holder result choosing follow later version.","code":""},{"path":"https://wjschne.github.io/unusualprofile/LICENSE.html","id":"id_15-disclaimer-of-warranty","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"15. Disclaimer of Warranty","title":"GNU General Public License","text":"WARRANTY PROGRAM, EXTENT PERMITTED APPLICABLE LAW. EXCEPT OTHERWISE STATED WRITING COPYRIGHT HOLDERS /PARTIES PROVIDE PROGRAM “” WITHOUT WARRANTY KIND, EITHER EXPRESSED IMPLIED, INCLUDING, LIMITED , IMPLIED WARRANTIES MERCHANTABILITY FITNESS PARTICULAR PURPOSE. ENTIRE RISK QUALITY PERFORMANCE PROGRAM . PROGRAM PROVE DEFECTIVE, ASSUME COST NECESSARY SERVICING, REPAIR CORRECTION.","code":""},{"path":"https://wjschne.github.io/unusualprofile/LICENSE.html","id":"id_16-limitation-of-liability","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"16. Limitation of Liability","title":"GNU General Public License","text":"EVENT UNLESS REQUIRED APPLICABLE LAW AGREED WRITING COPYRIGHT HOLDER, PARTY MODIFIES /CONVEYS PROGRAM PERMITTED , LIABLE DAMAGES, INCLUDING GENERAL, SPECIAL, INCIDENTAL CONSEQUENTIAL DAMAGES ARISING USE INABILITY USE PROGRAM (INCLUDING LIMITED LOSS DATA DATA RENDERED INACCURATE LOSSES SUSTAINED THIRD PARTIES FAILURE PROGRAM OPERATE PROGRAMS), EVEN HOLDER PARTY ADVISED POSSIBILITY DAMAGES.","code":""},{"path":"https://wjschne.github.io/unusualprofile/LICENSE.html","id":"id_17-interpretation-of-sections-15-and-16","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"17. Interpretation of Sections 15 and 16","title":"GNU General Public License","text":"disclaimer warranty limitation liability provided given local legal effect according terms, reviewing courts shall apply local law closely approximates absolute waiver civil liability connection Program, unless warranty assumption liability accompanies copy Program return fee. END TERMS CONDITIONS","code":""},{"path":"https://wjschne.github.io/unusualprofile/LICENSE.html","id":"how-to-apply-these-terms-to-your-new-programs","dir":"","previous_headings":"","what":"How to Apply These Terms to Your New Programs","title":"GNU General Public License","text":"develop new program, want greatest possible use public, best way achieve make free software everyone can redistribute change terms. , attach following notices program. safest attach start source file effectively state exclusion warranty; file least “copyright” line pointer full notice found. Also add information contact electronic paper mail. program terminal interaction, make output short notice like starts interactive mode: hypothetical commands show w show c show appropriate parts General Public License. course, program’s commands might different; GUI interface, use “box”. also get employer (work programmer) school, , sign “copyright disclaimer” program, necessary. information , apply follow GNU GPL, see <http://www.gnu.org/licenses/>. GNU General Public License permit incorporating program proprietary programs. program subroutine library, may consider useful permit linking proprietary applications library. want , use GNU Lesser General Public License instead License. first, please read <http://www.gnu.org/philosophy/--lgpl.html>.","code":"<one line to give the program's name and a brief idea of what it does.> Copyright (C) <year>  <name of author>  This program is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.  This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.  You should have received a copy of the GNU General Public License along with this program.  If not, see <http://www.gnu.org/licenses/>. <program>  Copyright (C) <year>  <name of author> This program comes with ABSOLUTELY NO WARRANTY; for details type 'show w'. This is free software, and you are welcome to redistribute it under certain conditions; type 'show c' for details."},{"path":"https://wjschne.github.io/unusualprofile/reference/cond_maha.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate the conditional Mahalanobis distance for any variables. — cond_maha","title":"Calculate the conditional Mahalanobis distance for any variables. — cond_maha","text":"Calculate conditional Mahalanobis distance variables.","code":""},{"path":"https://wjschne.github.io/unusualprofile/reference/cond_maha.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate the conditional Mahalanobis distance for any variables. — cond_maha","text":"","code":"cond_maha(   data,   R,   v_dep,   v_ind = NULL,   v_ind_composites = NULL,   mu = 0,   sigma = 1,   use_sample_stats = FALSE,   label = NA )"},{"path":"https://wjschne.github.io/unusualprofile/reference/cond_maha.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate the conditional Mahalanobis distance for any variables. — cond_maha","text":"data Data.frame independent dependent variables. Unless mu sigma specified, data assumed z-scores. R Correlation among variables. v_dep Vector names dependent variables profile. v_ind Vector names independent variables like control . v_ind_composites Vector names independent variables composites dependent variables mu vector means. single value means variables mean. sigma vector standard deviations. single value means variables standard deviation use_sample_stats TRUE, estimate R, mu, sigma data. complete cases used (.e., missing values v_dep, v_ind, v_ind_composites). label optional tag labeling output","code":""},{"path":"https://wjschne.github.io/unusualprofile/reference/cond_maha.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate the conditional Mahalanobis distance for any variables. — cond_maha","text":"list conditional Mahalanobis distance dCM = Conditional Mahalanobis distance dCM_df = Degrees freedom conditional Mahalanobis distance dCM_p = proportion indicates unusual profile compared profiles independent variable values. example, dCM_p = 0.88, profile unusual 88 percent profiles controlling independent variables. dM_dep = Mahalanobis distance just dependent variables dM_dep_df = Degrees freedom Mahalanobis distance dependent variables dM_dep_p = Proportion associated Mahalanobis distance dependent variables dM_ind = Mahalanobis distance just independent variables dM_ind_df = Degrees freedom Mahalanobis distance independent variables dM_ind_p = Proportion associated Mahalanobis distance independent variables v_dep = Dependent variable names v_ind = Independent variable names v_ind_singular = Independent variables can perfectly predicted dependent variables (e.g., composite scores) v_ind_nonsingular = Independent variables perfectly predicted dependent variables data = data used calculations d_ind = independent variable data d_inp_p = Assuming normality, cumulative distribution function independent variables d_dep = dependent variable data d_dep_predicted = predicted values dependent variables d_dep_deviations = d_dep - d_dep_predicted (.e., residuals dependent variables) d_dep_residuals_z = standardized residuals dependent variables d_dep_cp = conditional proportions associated standardized residuals d_dep_p = Assuming normality, cumulative distribution function dependent variables R2 = Proportion variance dependent variable explained independent variables zSEE = Standardized standard error estimate dependent variable SEE = Standard error estimate dependent variable ConditionalCovariance = Covariance matrix dependent variables controlling independent variables distance_reduction = 1 - (dCM / dM_dep) (Degree independent variables decrease Mahalanobis distance dependent variables. Negative reductions mean profile unusual controlling independent variables. Returns 0 dM_dep 0.) variability_reduction = 1 - sum((X_dep - predicted_dep) ^ 2) / sum((X_dep - mu_dep) ^ 2) (Degree independent variables decrease variability dependent variables (X_dep). Negative reductions mean profile variable controlling independent variables. Returns 0 X_dep == mu_dep) mu = Variable means sigma = Variable standard deviations d_person = Data frame consisting Mahalanobis distance data person d_variable = Data frame consisting variable characteristics label = label slot","code":""},{"path":"https://wjschne.github.io/unusualprofile/reference/cond_maha.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate the conditional Mahalanobis distance for any variables. — cond_maha","text":"","code":"library(unusualprofile) library(simstandard)  m <- \" Gc =~ 0.85 * Gc1 + 0.68 * Gc2 + 0.8 * Gc3 Gf =~ 0.8 * Gf1 + 0.9 * Gf2 + 0.8 * Gf3 Gs =~ 0.7 * Gs1 + 0.8 * Gs2 + 0.8 * Gs3 Read =~ 0.66 * Read1 + 0.85 * Read2 + 0.91 * Read3 Math =~ 0.4 * Math1 + 0.9 * Math2 + 0.7 * Math3 Gc ~ 0.6 * Gf + 0.1 * Gs Gf ~ 0.5 * Gs Read ~ 0.4 * Gc + 0.1 * Gf Math ~ 0.2 * Gc + 0.3 * Gf + 0.1 * Gs\" # Generate 10 cases d_demo <- simstandard::sim_standardized(m = m, n = 10)  # Get model-implied correlation matrix R_all <- simstandard::sim_standardized_matrices(m)$Correlations$R_all  cond_maha(data = d_demo,           R = R_all,           v_dep = c(\"Math\", \"Read\"),           v_ind = c(\"Gf\", \"Gs\", \"Gc\")) #> Conditional Mahalanobis Distance = 1.0270, df = 2, p = 0.4098 Conditional Mahalanobis Distance = 1.0696, df = 2, p = 0.4356 Conditional Mahalanobis Distance = 1.0953, df = 2, p = 0.4511 Conditional Mahalanobis Distance = 1.9265, df = 2, p = 0.8436 Conditional Mahalanobis Distance = 0.4878, df = 2, p = 0.1122 Conditional Mahalanobis Distance = 2.3043, df = 2, p = 0.9297 Conditional Mahalanobis Distance = 0.1760, df = 2, p = 0.0154 Conditional Mahalanobis Distance = 2.0633, df = 2, p = 0.8810 Conditional Mahalanobis Distance = 2.4448, df = 2, p = 0.9496 Conditional Mahalanobis Distance = 0.7477, df = 2, p = 0.2438"},{"path":"https://wjschne.github.io/unusualprofile/reference/d_example.html","id":null,"dir":"Reference","previous_headings":"","what":"An example data.frame — d_example","title":"An example data.frame — d_example","text":"dataset 1 row data single case.","code":""},{"path":"https://wjschne.github.io/unusualprofile/reference/d_example.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"An example data.frame — d_example","text":"","code":"d_example"},{"path":"https://wjschne.github.io/unusualprofile/reference/d_example.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"An example data.frame — d_example","text":"data frame 1 row 8 variables: X_1 predictor variable X_2 predictor variable X_3 predictor variable Y_1 outcome variable Y_2 outcome variable Y_3 outcome variable X latent predictor variable Y latent outcome variable","code":""},{"path":"https://wjschne.github.io/unusualprofile/reference/is_singular.html","id":null,"dir":"Reference","previous_headings":"","what":"Test if matrix is singular — is_singular","title":"Test if matrix is singular — is_singular","text":"Test matrix singular","code":""},{"path":"https://wjschne.github.io/unusualprofile/reference/is_singular.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Test if matrix is singular — is_singular","text":"","code":"is_singular(x)"},{"path":"https://wjschne.github.io/unusualprofile/reference/is_singular.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Test if matrix is singular — is_singular","text":"x matrix","code":""},{"path":"https://wjschne.github.io/unusualprofile/reference/is_singular.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Test if matrix is singular — is_singular","text":"logical","code":""},{"path":"https://wjschne.github.io/unusualprofile/reference/p2label.html","id":null,"dir":"Reference","previous_headings":"","what":"Range label associated with probability — p2label","title":"Range label associated with probability — p2label","text":"Range label associated probability","code":""},{"path":"https://wjschne.github.io/unusualprofile/reference/p2label.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Range label associated with probability — p2label","text":"","code":"p2label(p)"},{"path":"https://wjschne.github.io/unusualprofile/reference/p2label.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Range label associated with probability — p2label","text":"p Probability","code":""},{"path":"https://wjschne.github.io/unusualprofile/reference/p2label.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Range label associated with probability — p2label","text":"label string","code":""},{"path":"https://wjschne.github.io/unusualprofile/reference/plot.cond_maha.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot the variables from the results of the cond_maha function. — plot.cond_maha","title":"Plot the variables from the results of the cond_maha function. — plot.cond_maha","text":"Plot variables results cond_maha function.","code":""},{"path":"https://wjschne.github.io/unusualprofile/reference/plot.cond_maha.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot the variables from the results of the cond_maha function. — plot.cond_maha","text":"","code":"# S3 method for class 'cond_maha' plot(   x,   ...,   p_tail = 0,   family = \"sans\",   score_digits = ifelse(min(x$sigma) >= 10, 0, 2) )"},{"path":"https://wjschne.github.io/unusualprofile/reference/plot.cond_maha.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot the variables from the results of the cond_maha function. — plot.cond_maha","text":"x results cond_maha function. ... Arguments passed print function p_tail proportion tail shade family Font family. score_digits Number digits round scores.","code":""},{"path":"https://wjschne.github.io/unusualprofile/reference/plot.cond_maha.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot the variables from the results of the cond_maha function. — plot.cond_maha","text":"ggplot2-object","code":""},{"path":"https://wjschne.github.io/unusualprofile/reference/plot.maha.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot objects of the maha class (i.e, the results of the cond_maha function using dependent variables only). — plot.maha","title":"Plot objects of the maha class (i.e, the results of the cond_maha function using dependent variables only). — plot.maha","text":"Plot objects maha class (.e, results cond_maha function using dependent variables ).","code":""},{"path":"https://wjschne.github.io/unusualprofile/reference/plot.maha.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot objects of the maha class (i.e, the results of the cond_maha function using dependent variables only). — plot.maha","text":"","code":"# S3 method for class 'maha' plot(   x,   ...,   p_tail = 0,   family = \"sans\",   score_digits = ifelse(min(x$sigma) >= 10, 0, 2) )"},{"path":"https://wjschne.github.io/unusualprofile/reference/plot.maha.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot objects of the maha class (i.e, the results of the cond_maha function using dependent variables only). — plot.maha","text":"x results cond_maha function. ... Arguments passed print function p_tail Proportion violin tail (defaults 0). family Font family. score_digits Number digits round scores.","code":""},{"path":"https://wjschne.github.io/unusualprofile/reference/plot.maha.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot objects of the maha class (i.e, the results of the cond_maha function using dependent variables only). — plot.maha","text":"ggplot2-object","code":""},{"path":"https://wjschne.github.io/unusualprofile/reference/proportion2percentile.html","id":null,"dir":"Reference","previous_headings":"","what":"Rounds proportions to significant digits both near 0 and 1, then converts to percentiles — proportion2percentile","title":"Rounds proportions to significant digits both near 0 and 1, then converts to percentiles — proportion2percentile","text":"Rounds proportions significant digits near 0 1, converts percentiles","code":""},{"path":"https://wjschne.github.io/unusualprofile/reference/proportion2percentile.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Rounds proportions to significant digits both near 0 and 1, then converts to percentiles — proportion2percentile","text":"","code":"proportion2percentile(   p,   digits = 2,   remove_leading_zero = TRUE,   add_percent_character = FALSE )"},{"path":"https://wjschne.github.io/unusualprofile/reference/proportion2percentile.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Rounds proportions to significant digits both near 0 and 1, then converts to percentiles — proportion2percentile","text":"p probability digits rounding digits. Defaults 2 remove_leading_zero Remove leading zero small percentiles, Defaults TRUE add_percent_character Append percent character. Defaults FALSE","code":""},{"path":"https://wjschne.github.io/unusualprofile/reference/proportion2percentile.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Rounds proportions to significant digits both near 0 and 1, then converts to percentiles — proportion2percentile","text":"character vector","code":""},{"path":"https://wjschne.github.io/unusualprofile/reference/proportion2percentile.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Rounds proportions to significant digits both near 0 and 1, then converts to percentiles — proportion2percentile","text":"","code":"proportion2percentile(0.01111) #> [1] \"1\""},{"path":"https://wjschne.github.io/unusualprofile/reference/proportion_round.html","id":null,"dir":"Reference","previous_headings":"","what":"Rounds proportions to significant digits both near 0 and 1 — proportion_round","title":"Rounds proportions to significant digits both near 0 and 1 — proportion_round","text":"Rounds proportions significant digits near 0 1","code":""},{"path":"https://wjschne.github.io/unusualprofile/reference/proportion_round.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Rounds proportions to significant digits both near 0 and 1 — proportion_round","text":"","code":"proportion_round(p, digits = 2)"},{"path":"https://wjschne.github.io/unusualprofile/reference/proportion_round.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Rounds proportions to significant digits both near 0 and 1 — proportion_round","text":"p probability digits rounding digits","code":""},{"path":"https://wjschne.github.io/unusualprofile/reference/proportion_round.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Rounds proportions to significant digits both near 0 and 1 — proportion_round","text":"numeric vector","code":""},{"path":"https://wjschne.github.io/unusualprofile/reference/proportion_round.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Rounds proportions to significant digits both near 0 and 1 — proportion_round","text":"","code":"proportion_round(0.01111) #> [1] \".01\""},{"path":"https://wjschne.github.io/unusualprofile/reference/R_example.html","id":null,"dir":"Reference","previous_headings":"","what":"An example correlation matrix — R_example","title":"An example correlation matrix — R_example","text":"correlation matrix used demonstration purposes model-implied correlation matrix structural model: X =~ 0.7 * X_1 + 0.5 * X_2 + 0.8 * X_3 Y =~ 0.8 * Y_1 + 0.7 * Y_2 + 0.9 * Y_3 Y ~ 0.6 * X","code":""},{"path":"https://wjschne.github.io/unusualprofile/reference/R_example.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"An example correlation matrix — R_example","text":"","code":"R_example"},{"path":"https://wjschne.github.io/unusualprofile/reference/R_example.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"An example correlation matrix — R_example","text":"matrix 8 rows 8 columns: X_1 predictor variable X_2 predictor variable X_3 predictor variable Y_1 outcome variable Y_2 outcome variable Y_3 outcome variable X latent predictor variable Y latent outcome variable","code":""},{"path":"https://wjschne.github.io/unusualprofile/reference/unusualprofile-package.html","id":null,"dir":"Reference","previous_headings":"","what":"unusualprofile: Calculates Conditional Mahalanobis Distances — unusualprofile-package","title":"unusualprofile: Calculates Conditional Mahalanobis Distances — unusualprofile-package","text":"Calculates Mahalanobis distance every row set outcome variables (Mahalanobis, 1936 doi:10.1007/s13171-019-00164-5 ). conditional Mahalanobis distance calculated using conditional covariance matrix (.e., covariance matrix outcome variables controlling set predictors). Plotting output cond_maha() function can help identify elements profile unusual controlling predictors.","code":""},{"path":[]},{"path":"https://wjschne.github.io/unusualprofile/reference/unusualprofile-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"unusualprofile: Calculates Conditional Mahalanobis Distances — unusualprofile-package","text":"Maintainer: W. Joel Schneider w.joel.schneider@gmail.com (ORCID) Authors: Feng Ji fengji@berkeley.edu","code":""},{"path":"https://wjschne.github.io/unusualprofile/news/index.html","id":"unusualprofile-014-2024-02-14","dir":"Changelog","previous_headings":"","what":"unusualprofile 0.1.4 2024-02-14","title":"unusualprofile 0.1.4 2024-02-14","text":"CRAN release: 2024-02-14 Added zSEE output list cond_maha. contains standardized standard error estimate. Fixed bug SEE slot output lists cond_maha incorrectly reporting standardized standard error estimate—now zSEE. SEE slot now reports (unstandardized) standard error estimate.","code":""},{"path":"https://wjschne.github.io/unusualprofile/news/index.html","id":"unusualprofile-013-2023-08-27","dir":"Changelog","previous_headings":"","what":"unusualprofile 0.1.3 2023-08-27","title":"unusualprofile 0.1.3 2023-08-27","text":"Minor fixes","code":""},{"path":"https://wjschne.github.io/unusualprofile/news/index.html","id":"unusualprofile-012-2022-12-07","dir":"Changelog","previous_headings":"","what":"unusualprofile 0.1.2 2022-12-07","title":"unusualprofile 0.1.2 2022-12-07","text":"CRAN release: 2022-12-13 Fixed plot.cond_maha bugs related scores different means standard deviations","code":""},{"path":"https://wjschne.github.io/unusualprofile/news/index.html","id":"unusualprofile-011-2022-12-01","dir":"Changelog","previous_headings":"","what":"unusualprofile 0.1.1 2022-12-01","title":"unusualprofile 0.1.1 2022-12-01","text":"CRAN release: 2022-11-29 Fixed bug prevented independent variables independent composites used together predictors removed reduction statistics plot.cond_maha","code":""},{"path":"https://wjschne.github.io/unusualprofile/news/index.html","id":"unusualprofile-010-2021-05-12","dir":"Changelog","previous_headings":"","what":"unusualprofile 0.1.0 2021-05-12","title":"unusualprofile 0.1.0 2021-05-12","text":"CRAN release: 2021-05-13 First submission CRAN","code":""}]
