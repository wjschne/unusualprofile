{
  "hash": "0059e403d7f550bfd21047bdb2875134",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: 'Introduction to the unusualprofile package'\nauthor: \"W. Joel Schneider & Feng Ji\"\ndate: \"2025-08-16\"\nformat: \n  html:\n    toc: true\n    html-math-method: mathjax\nbibliography: bibliography.bib\ncsl: apa.csl\nfont-import: https://fonts.googleapis.com/css?family=Titillium+ Web:100&amp;subset=latin-ext\nfont-family: 'Titillium Web'\nvignette: >\n  %\\VignetteIndexEntry{Vignette's Title}\n  %\\VignetteEngine{quarto::html}\n  %\\VignetteEncoding{UTF-8}\n---\n\n\n::: {.cell}\n<style type=\"text/css\">\n\n@import url('http://fonts.googleapis.com/css?family=Titillium+Web');\nbody {font-family: 'Titillium Web', 'Open Sans', 'sans-serif'; \n      font-size:18px; \n      line-height:1.25;}\n\n.caption {text-align:right; font-size:11pt}\ntable caption {text-align:left; font-size:11pt}\n\nimg {border: none}\n</style>\n:::\n\n\n\n\n\n::: {.cell}\n\n:::\n\n\nThe unusualprofile package can identify multivariate outliers conditioned on a set of predictors [@ji2018].\n\n# Univariate Outliers\n\nA univariate outlier is far from most of the other scores in a distribution. You can easily spot a large outlier in the histogram in @fig-univariate.\n\n\n::: {.cell}\n::: {.cell-output-display}\n![A histogram with a univariate outlier.](tutorial_unusualprofile_files/figure-html/fig-univariate-1.png){#fig-univariate width=100% height=100%}\n:::\n:::\n\n\nIf we want to quantify the extremity of the univariate outlier, we could convert the outlier to a *z*-score, which indicates the outlier's distance from the population mean in standard deviation units. In this case, the outlier is 10 standard deviations from the mean of the other scores.\n\n# Multivariate Outliers\n\nA univariate outlier refers to a single case from a single variable. A multivariate outlier refers to a single row of data consisting of 2 or more variables.\n\nA multivariate outlier might not be unusual on any particular variable, but has an unusual *pattern* of scores. For example, in @fig-multivariate, the red point is not very unusual in a univariate context---just 1 standard deviation from the mean of either variable. However, because *x* and *y* are highly correlated, it is extremely rare for a data point to differ by 2 standard deviations.\n\n\n::: {.cell}\n::: {.cell-output-display}\n![A scatterplot with a multivariate outlier.](tutorial_unusualprofile_files/figure-html/fig-multivariate-1.png){#fig-multivariate width=100% height=100%}\n:::\n:::\n\n\n\nScatterplots are great for inspecting multivariate outliers with a small number of variables. Unfortunately, scatterplots can only display 2 or 3 variables at a time. A different way to view multivariate data is to show each case as a profile of scores connected by lines. In @fig-multivariate-outlier-2, most of the lines are nearly flat---highly correlated variables with the same means and standard deviations will generally produce flat profiles. The multivariate outlier, in red, is clearly not flat.\n\n\n::: {.cell}\n::: {.cell-output-display}\n![A two-variable violin plot with a multivariate outlier.](tutorial_unusualprofile_files/figure-html/fig-multivariate-outlier-2-1.png){#fig-multivariate-outlier-2 width=100% height=100%}\n:::\n:::\n\n\nSuppose that we have four variables, all standard normal. Because the four variables correlate at 0.99, the profiles are all quite flat. However, the red profile {1,1,−1,1} is much less flat, making it unusual in this context.\n\n\n::: {.cell}\n::: {.cell-output-display}\n![A four-variable violin plot with a multivariate outlier.](tutorial_unusualprofile_files/figure-html/fig-multivariate-outlier-4-1.png){#fig-multivariate-outlier-4 width=100% height=100%}\n:::\n:::\n\n\nIn @fig-multivariate-outlier-4, the red profile is obviously unusual. However, we cannot yet tell exactly how unusual it is. We would like a measure of its multivariate extremity.\n\n# Quantifying Multivariate Extremity\n\n## The Euclidean Distance\n\nThe simplest (but ultimately unsatisfying) way to measure a profile's multivariate extremity is with the Euclidean distance. A multidimensional extension of the Pythagorean Theorem, the *Euclidean distance* is the square root of the sum of the squared differences on each dimension from some reference point. The reference point of interest is usually the vector of means from each variable---the *centroid*. The Euclidean distance of point *p*~1~ = (1,1,−1,1) to the centroid *p*~2~ = (0,0,0,0) is\n\n$$\\sqrt{(p_1-p_2)'(p_1-p_2)}=\\sqrt{(1-0)^2+(1-0)^2+(-1-0)^2+(1-0)^2}=2$$\n\nThe Euclidean distance of point (1,1,1,1) to the centroid is also 2, yet if the two variables are highly correlated, point (1,1,−1,1) is much more unusual than point (1,1,1,1). Though fairly simple to calculate, the Euclidean distance is insensitive to the relationships among the variables, making it a poor choice for quantifying the extremity of profiles of correlated variables.\n\n## The Mahalanobis Distance\n\nIn 1936, P. R. Mahalanobis introduced a variant of the Euclidean distance that accounts for the covariance of the variables. Conceptually, the *Mahalanobis distance* is a Euclidean distance of profile scores if the variables are rotated and rescaled to fit on their principal component axes. Because principal components are always uncorrelated, distances in principal component space always have the same meaning regardless of the relationships of the original variables.\n\nComputationally, the principal components need not be calculated explicitly. We simply need to invert the covariance matrix of the profile variables:\n\n$$d_{M}=\\sqrt{(X-\\mu_X)'\\Sigma_X^{-1}(X-\\mu_X)}$$\n\nWhere\n\n> $d_M$ is the Mahalanobis distance\\\n> $X$ is a vector of variable scores\\\n> $\\mu_X$ is the vector of variable means of $X$ (i.e., the centroid of $X$)\\\n> $\\Sigma_X$ is the covariance matrix of the variables in vector $X$\n\nIf the variables in *X* are normally distributed, essentially the Mahalanobis distance is creating principal component scores that are uncorrelated standard normal variates, squaring each score, and then summing each row of scores. Adding squared uncorrelated standard normal variates just so happens to be how the χ^2^ distribution is made. The degrees of freedom in the χ^2^ distribution corresponds to the number of standard normal variates that are squared and summed.\n\nThus, if there are *k* normally distributed variables in vector *X*, the Mahalanobis distance squared for vector *X* has a χ^2^ distribution with *k* degrees of freedom. In mathematical notation:\n\n$$d_M ^ 2 \\sim \\chi^2(k)$$\n\nThus, if we can assume the profile variables are multivariate normal, we can use the cumulative distribution function of the χ^2^ distribution to quantify how unusual a particular profile compares to the general population of profiles.\n\nSuppose that a Mahalanobis distance for a row of data from 5 standard normal variates is 15.5. The cumulative distribution function for the χ^2^ distribution with 5 degrees of freedom is 0.992. Thus, the row of data is a multivariate outlier.\n\n# Conditional Mahalanobis Distances\n\nA disadvantage of the Mahalanobis Distance is that it treats all the principal component dimensions equivalently. For highly correlated variables, the first principal component (or general factor) is of particular importance. We might want to distinguish between cases that are unusual on the first principal component and scores that are unusual on the remaining principal components.\n\nFor example, in a distribution of 4 highly correlated standardized variables, the point (4,4,4,4) is unusual because each point is unusual---four standard deviations above the mean. However, after accounting for its extreme elevation, the profile is perfectly flat. That is, the profile is unusually elevated, but has the modal profile shape. Of course, a perfectly flat profile is unusual in a different sense. It is *extremely flat* in the same sense that a score equal to the mean is *extremely average*.\n\nIn contrast, the point (−4, 4, −4, 4) is perfectly average in its elevation---the scores average to 0. It has, however, an unusually uneven shape.\n\n## Distinguishing Profile Shape from Profile Elevation\n\nOne way to define the profile elevation is to create a composite score from the sum of profile variables. All profiles that produce the same composite score are defined to have the same profile elevation. For ease of computation, the profile variables and the composite score can be re-scaled to have the same metric---preferably the *z*-score metric.\n\n:::{#fig-onedimensional}\n![](One_dimensional.svg){width=300}\n\nA simple model with standardized loadings\n\n:::\n\n\nSuppose that we compare all profiles that have the same elevation but have different profile shapes. Imagine that four standardized variables correlate according to the structural model in @fig-one-dimensional. \n\n\n::: {#tbl-cor .cell tbl-cap='Model-implied correlations among variables'}\n::: {.cell-output-display}\n\n\n|       | *X*~1~ | *X*~2~ | *X*~3~ | *X*~4~ |\n|:------|:------:|:------:|:------:|:------:|\n|*X*~1~ |   1    |  .86   |  .81   |  .57   |\n|*X*~2~ |  .86   |   1    |  .76   |  .54   |\n|*X*~3~ |  .81   |  .76   |   1    |  .51   |\n|*X*~4~ |  .57   |  .54   |  .51   |   1    |\n\n\n:::\n:::\n\n\nThe correlations among the four variables are in @tbl-cor. Suppose from the population of profiles we select a subset of cases in which the profiles have an elevation of 1 (i.e., their composite score has a *z*-score of 1).\n\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n![Conditional distributions for people with a composite score of 1.](tutorial_unusualprofile_files/figure-html/fig-conditional-dist-1.png){#fig-conditional-dist width=100% height=100%}\n:::\n:::\n\n\nIn @fig-conditional-dist, two score profiles with an elevation of 1 are shown. The red profile is flat and unremarkable, whereas the blue profile is unusually uneven. The light gray vertical normal distribution on the left of each variable shows the population distribution of the unselected profiles, and the darker gray normal distribution on the right shows the conditional distributions of the selected profiles (i.e., all profiles with an elevation of 1). Note that *X*~1~ has a relatively narrow conditional distribution because its loading of *&lambda;*&nbsp;=&nbsp;0.95 is high, and *X*~4~ has a relatively wide conditional distribution because its loading of *&lambda;*&nbsp;=&nbsp;0.6 is lower.\n\n# A Worked Example with a Simple Model\n\n\n::: {.cell}\n\n:::\n\n\n\n::: {.cell}\n\n:::\n\n\n\n::: {.cell}\n\n:::\n\n\nSuppose that among standard multivariate normal variables, there is a profile of scores $X$:\n\n$$X=\\{X_1,X_2, X_3, X_4\\} = \\{2,3,1,2\\}. $$\n\nAs seen in @fig-example-profile, this profile of scores is summarized by a composite score of 2.30.\n\n\n::: {.cell}\n::: {.cell-output-display}\n![Example profile in a standard multivariate normal distribution.](tutorial_unusualprofile_files/figure-html/fig-example-profile-1.png){#fig-example-profile width=100% height=100%}\n:::\n:::\n\n\nHow can we calculate the Mahalanobis distance for profiles that all have the same elevation (i.e., composite score)? We will show how to do so in two ways. The easier of the two methods will be to use the [simstandard package](https://wjschne.github.io/simstandard/articles/simstandard_tutorial.html) to create the data and the unusualprofile package to calculate the conditional Mahalanobis distance. For your reference, we also see how to do everything \"by hand\" using matrix algebra in the [Calculations performed by the unusualprofile package vignette](https://wjschne.github.io/unusualprofile/articles/unusualprofile_calculations.html).\n\n## Calculations Using the simstandard and unusualprofile Packages\n\nFirst we load several packages.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(unusualprofile)\nlibrary(dplyr)\nlibrary(simstandard)\n```\n:::\n\n\nThe [simstandard package](https://wjschne.github.io/simstandard/articles/simstandard_tutorial.html) can create simulated multivariate normal data from a structural equation model. The first step is to specify the model using [lavaan syntax](https://lavaan.ugent.be/tutorial/syntax1.html):\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmodel <- \"X =~ 0.95 * X_1 + \n               0.90 * X_2 + \n               0.85 * X_3 + \n               0.60 * X_4\"\n```\n:::\n\n\n\nUsing the [simstandard package](https://wjschne.github.io/simstandard/articles/simstandard_tutorial.html), we can find the model-implied correlation matrix. \n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Model-implied correlations of all variables\nR_all <- simstandard::get_model_implied_correlations(model, composites = TRUE)\nR_all\n#>                   X_1       X_2       X_3       X_4 X_Composite\n#> X_1         1.0000000 0.8550000 0.8075000 0.5700000   0.9294705\n#> X_2         0.8550000 1.0000000 0.7650000 0.5400000   0.9086239\n#> X_3         0.8075000 0.7650000 1.0000000 0.5100000   0.8863396\n#> X_4         0.5700000 0.5400000 0.5100000 1.0000000   0.7533527\n#> X_Composite 0.9294705 0.9086239 0.8863396 0.7533527   1.0000000\n```\n:::\n\n\nUsing the same model, we can calculate composite scores from profile data like so:\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Create data.frame, and add the composite score\nd <- data.frame(\n  X_1 = 2,\n  X_2 = 3,\n  X_3 = 1,\n  X_4 = 2\n) %>%\n  simstandard::add_composite_scores(m = model)\n\n```\n:::\n\n\nThis will result in a single row of data, with observed test scores and a composite variable:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nd\n#>   X_1 X_2 X_3 X_4 X_Composite\n#> 1   2   3   1   2    2.300314\n```\n:::\n\n\nAlthough we can enter the names of the variables into the `cond_maha` function by hand, with large models it is less tedious to do so programmatically. Here we select the independent variable `X_Composite`:\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Independent composite variable names\nv_X_composite <- d %>%\n  select(ends_with(\"Composite\")) %>%\n  colnames\n\nv_X_composite\n#> [1] \"X_Composite\"\n```\n:::\n\n\nHere we select the dependent variables:\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Dependent variable names\nv_X <- d %>%\n  select(!ends_with(\"Composite\")) %>%\n  colnames\n\nv_X\n#> [1] \"X_1\" \"X_2\" \"X_3\" \"X_4\"\n```\n:::\n\n\nNow we use the `cond_maha` function to calculate the conditional Mahalanobis distance. Because the \"independent\" composite score can be predicted perfectly from the dependent scores, we specify it using the `v_ind_composite` parameter. Had it simply had been a predictor of the variables, it would have been specified using the `v_ind` parameter.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Calculate the conditional Mahalanobis distance\ncm <- cond_maha(\n  data = d,\n  R = R_all,\n  v_dep = v_X,\n  v_ind_composites = v_X_composite\n)\n\ncm\n#> Conditional Mahalanobis Distance = 2.9246, df = 3, p = 0.9641\n```\n:::\n\n\nThe output of the `cond_maha` function can be displayed with the `plot` function.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nplot(cm)\n```\n\n::: {.cell-output-display}\n![A profile of z-scores in the context of population distributions (darker gray) and conditional distributions (lighter gray) controlling for overall composite score.](tutorial_unusualprofile_files/figure-html/fig-cond-maha-1.png){#fig-cond-maha width=100% height=100%}\n:::\n:::\n\n\nIn @fig-cond-maha, we can see that the profile is more unusual than 96.41% of profiles with the same elevation (i.e., a composite score of *z* = 2.3). The conditional Mahalanobis distance of the dependent variables is 2.92, which is a 21% smaller than the unconditional Mahalanobis distance of the dependent variables 3.72.\n\nNote that the Mahalanobis distance of the independent variable is 2.3. When added, the squared conditional Mahalanobis distance and the squared Mahalanobis distance of the independent variable equal the squared unconditional unconditional Mahalanobis distance of the dependent variables (within rounding error).\n\n$$\\begin{align*}\n2.92^2 + 2.3^2 &= 3.72^2 \\\\\nd_{CM}^2 +  \\text{Independent}~d_M^2 &= \\text{Dependent}~d_M^2\\\\\n\\end{align*}$$\n\nIt is not a coincidence that this relationship resembles the Pythagorean theorem. In principal component space, these distances form a right triangle. However, this equation only holds true when the independent variables are perfectly predicted by the dependent variables such as when the independent variables are composites of the dependent variables.\n\n## View Complete Output of `cond_maha` Function\n\nBy default, the `cond_maha` function prints just the the most important information.\n\nIf you would like to see everything in the output of the `cond_maha` function, you can use the `View` or  `str` function to see the entire list.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nView(cm)\nstr(cm)\n```\n:::\n\n\n\n# A Worked Example with a More Complex Model\n\n\n::: {.cell}\n\n:::\n\n\n\n\n::: {.cell}\n\n:::\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nd_case <- tibble(\n  Ga1 = 61,\n  Ga2 = 65,\n  Ga3 = 69,\n  Gc1 = 109,\n  Gc2 = 97,\n  Gc3 = 103,\n  RD1 = 77,\n  RD2 = 71,\n  RD3 = 81,\n  RC1 = 90,\n  RC2 = 94,\n  RC3 = 99\n) %>%\n  simstandard::add_factor_scores(m = m_reading,\n                                 mu = 100,\n                                 sigma = 15,\n                                 CI = TRUE) %>%\n  simstandard::add_composite_scores(m = m_reading, mu = 100, sigma = 15)\n\nd_LB <-\n  select(d_case, ends_with(\"_LB\")) %>%\n  rename_with(~str_remove(., \"_FS\")) %>%\n  pivot_longer(cols = everything())\n\nd_UB <-\n  select(d_case, ends_with(\"_UB\")) %>%\n  rename_with(~str_remove(., \"_FS\")) %>%\n  pivot_longer(cols = everything())\n\nd_FS <-\n  select(d_case, ends_with(\"_FS\")) %>%\n  pivot_longer(cols = everything())\n\nbind_rows(d_LB,\n          d_UB,\n          d_FS) %>%\n  separate(name, c(\"Ability\", \"Role\")) %>%\n  pivot_wider(names_from = Role, values_from = value) %>%\n  ggplot(aes(Ability, FS)) +\n  geom_point() +\n  geom_errorbar(aes(ymin = LB, ymax = UB), width = 0.1)\n```\n\n::: {.cell-output-display}\n![](tutorial_unusualprofile_files/figure-html/show-profile-1.png){width=100% height=100%}\n:::\n:::\n\n\n\n\n\n::: {.cell}\n\n:::\n\n\n\n:::{#fig-reading-model}\n\n![](Reading.svg)\n\nGeneral Comprehension/Knowledge (Gc) and General Auditory Processing (Ga) Predict Reading Decoding and Reading Comprehension\n:::\n\nSuppose we have a simplified model of reading ability and its predictors as shown in @fig-reading-model. The two predictors of reading ability are General Comprehension/Knowledge (Gc) and General Auditory Processing (Ga). These cognitive abilities are precursor abilities to Reading Decoding (RD) and Reading Comprehension (RC). Ga is a stronger predictor of RD than of RC. For Gc, the reverse is true. Each cognitive and academic ability is measured with three tests each. \n\nWe want to know if a person's pattern of reading scores are unusual, given the cognitive scores.\n\nHere we load packages we will need.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tibble)\nlibrary(tidyr)\nlibrary(dplyr)\nlibrary(simstandard)\nlibrary(unusualprofile)\n```\n:::\n\n\nWe can use [lavaan syntax](https://lavaan.ugent.be/tutorial/syntax1.html) to specify the standardized coefficients of our model.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Model of Reading\nm_reading <- \"\nGa =~ 0.83 * Ga1 + 0.92 * Ga2 + 0.95 * Ga3\nGc =~ 0.88 * Gc1 + 0.71 * Gc2 + 0.85 * Gc3\nRD =~ 0.93 * RD1 + 0.87 * RD2 + 0.85 * RD3\nRC =~ 0.91 * RC1 + 0.86 * RC2 + 0.90 * RC3\nGa ~~ 0.68 * Gc\nRD ~  0.57 * Ga + 0.33 * Gc\nRC ~  0.05 * Ga + 0.40 * Gc  + 0.43 * RD\n\"\n```\n:::\n\n\n\nHere we enter the standard scores (Mean = 100, SD = 15) for a single person. Then we convert each standard score to *z*-scores. Finally, we use the [simstandard package's](https://wjschne.github.io/simstandard/articles/simstandard_tutorial.html) `add_composite_scores` and `add_factor_scores` function to add composite scores and estimated factor scores to the data frame.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nd_case <- tibble(\n  Ga1 = 61,\n  Ga2 = 65,\n  Ga3 = 69,\n  Gc1 = 109,\n  Gc2 = 97,\n  Gc3 = 103,\n  RD1 = 77,\n  RD2 = 71,\n  RD3 = 81,\n  RC1 = 90,\n  RC2 = 94,\n  RC3 = 99\n) %>%\n  simstandard::add_composite_scores(m = m_reading, mu = 100, sigma = 15) %>%\n  simstandard::add_factor_scores(m = m_reading, mu = 100, sigma = 15)\n```\n:::\n\n\n\n::: {#tbl-scores .cell tbl-cap='Case Scores'}\n::: {.cell-output-display}\n`````{=html}\n<table class=\"table table-striped\" style=\"margin-left: auto; margin-right: auto;\">\n <thead>\n  <tr>\n   <th style=\"text-align:left;\"> Ability </th>\n   <th style=\"text-align:right;\"> Score </th>\n   <th style=\"text-align:right;\"> z-score </th>\n   <th style=\"text-align:left;\"> p </th>\n  </tr>\n </thead>\n<tbody>\n  <tr>\n   <td style=\"text-align:left;font-weight: bold;\"> Ga (Composite) </td>\n   <td style=\"text-align:right;font-weight: bold;\"> 62.53 </td>\n   <td style=\"text-align:right;font-weight: bold;\"> -2.50 </td>\n   <td style=\"text-align:left;font-weight: bold;\"> .0062 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;font-weight: bold;\"> Ga (Factor Score) </td>\n   <td style=\"text-align:right;font-weight: bold;\"> 66.80 </td>\n   <td style=\"text-align:right;font-weight: bold;\"> -2.21 </td>\n   <td style=\"text-align:left;font-weight: bold;\"> .01 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;padding-left: 2em;\" indentlevel=\"1\"> Ga1 </td>\n   <td style=\"text-align:right;\"> 61.00 </td>\n   <td style=\"text-align:right;\"> -2.60 </td>\n   <td style=\"text-align:left;\"> .0047 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;padding-left: 2em;\" indentlevel=\"1\"> Ga2 </td>\n   <td style=\"text-align:right;\"> 65.00 </td>\n   <td style=\"text-align:right;\"> -2.33 </td>\n   <td style=\"text-align:left;\"> .01 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;padding-left: 2em;\" indentlevel=\"1\"> Ga3 </td>\n   <td style=\"text-align:right;\"> 69.00 </td>\n   <td style=\"text-align:right;\"> -2.07 </td>\n   <td style=\"text-align:left;\"> .02 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;font-weight: bold;\"> Gc (Composite) </td>\n   <td style=\"text-align:right;font-weight: bold;\"> 103.41 </td>\n   <td style=\"text-align:right;font-weight: bold;\"> 0.23 </td>\n   <td style=\"text-align:left;font-weight: bold;\"> .59 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;font-weight: bold;\"> Gc (Factor Score) </td>\n   <td style=\"text-align:right;font-weight: bold;\"> 99.73 </td>\n   <td style=\"text-align:right;font-weight: bold;\"> -0.02 </td>\n   <td style=\"text-align:left;font-weight: bold;\"> .49 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;padding-left: 2em;\" indentlevel=\"1\"> Gc1 </td>\n   <td style=\"text-align:right;\"> 109.00 </td>\n   <td style=\"text-align:right;\"> 0.60 </td>\n   <td style=\"text-align:left;\"> .73 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;padding-left: 2em;\" indentlevel=\"1\"> Gc2 </td>\n   <td style=\"text-align:right;\"> 97.00 </td>\n   <td style=\"text-align:right;\"> -0.20 </td>\n   <td style=\"text-align:left;\"> .42 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;padding-left: 2em;\" indentlevel=\"1\"> Gc3 </td>\n   <td style=\"text-align:right;\"> 103.00 </td>\n   <td style=\"text-align:right;\"> 0.20 </td>\n   <td style=\"text-align:left;\"> .58 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;font-weight: bold;\"> RC (Composite) </td>\n   <td style=\"text-align:right;font-weight: bold;\"> 93.89 </td>\n   <td style=\"text-align:right;font-weight: bold;\"> -0.41 </td>\n   <td style=\"text-align:left;font-weight: bold;\"> .34 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;font-weight: bold;\"> RC (Factor Score) </td>\n   <td style=\"text-align:right;font-weight: bold;\"> 92.36 </td>\n   <td style=\"text-align:right;font-weight: bold;\"> -0.51 </td>\n   <td style=\"text-align:left;font-weight: bold;\"> .31 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;padding-left: 2em;\" indentlevel=\"1\"> RC1 </td>\n   <td style=\"text-align:right;\"> 90.00 </td>\n   <td style=\"text-align:right;\"> -0.67 </td>\n   <td style=\"text-align:left;\"> .25 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;padding-left: 2em;\" indentlevel=\"1\"> RC2 </td>\n   <td style=\"text-align:right;\"> 94.00 </td>\n   <td style=\"text-align:right;\"> -0.40 </td>\n   <td style=\"text-align:left;\"> .34 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;padding-left: 2em;\" indentlevel=\"1\"> RC3 </td>\n   <td style=\"text-align:right;\"> 99.00 </td>\n   <td style=\"text-align:right;\"> -0.07 </td>\n   <td style=\"text-align:left;\"> .47 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;font-weight: bold;\"> RD (Composite) </td>\n   <td style=\"text-align:right;font-weight: bold;\"> 74.38 </td>\n   <td style=\"text-align:right;font-weight: bold;\"> -1.71 </td>\n   <td style=\"text-align:left;font-weight: bold;\"> .04 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;font-weight: bold;\"> RD (Factor Score) </td>\n   <td style=\"text-align:right;font-weight: bold;\"> 75.51 </td>\n   <td style=\"text-align:right;font-weight: bold;\"> -1.63 </td>\n   <td style=\"text-align:left;font-weight: bold;\"> .05 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;padding-left: 2em;\" indentlevel=\"1\"> RD1 </td>\n   <td style=\"text-align:right;\"> 77.00 </td>\n   <td style=\"text-align:right;\"> -1.53 </td>\n   <td style=\"text-align:left;\"> .06 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;padding-left: 2em;\" indentlevel=\"1\"> RD2 </td>\n   <td style=\"text-align:right;\"> 71.00 </td>\n   <td style=\"text-align:right;\"> -1.93 </td>\n   <td style=\"text-align:left;\"> .03 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;padding-left: 2em;\" indentlevel=\"1\"> RD3 </td>\n   <td style=\"text-align:right;\"> 81.00 </td>\n   <td style=\"text-align:right;\"> -1.27 </td>\n   <td style=\"text-align:left;\"> .10 </td>\n  </tr>\n</tbody>\n</table>\n\n`````\n:::\n:::\n\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n![Case Scores](tutorial_unusualprofile_files/figure-html/fig-plot-scores-1.png){#fig-plot-scores width=100% height=100%}\n:::\n:::\n\n\n\n## Conditional Mahalanobis Distances with Indicator Scores Only\n\nSuppose that we want to know if the academic performance scores are unusual, given the cognitive predictor scores.\n\nThe variable names for the cognitive predictors and the reading ability scores can be specified like so:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nv_cognitive <- c(paste0(\"Ga\", 1:3),\n                 paste0(\"Gc\", 1:3))\n\nv_reading <- c(paste0(\"RD\", 1:3),\n               paste0(\"RC\", 1:3))\n```\n:::\n\n\n\nNow let's see if the academic scores are unusual after controlling for the cognitive predictors:\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndCM <- cond_maha(\n  data = d_case,\n  R = simstandard::get_model_implied_correlations(m_reading),\n  mu = 100,\n  sigma = 15,\n  v_dep = v_reading,\n  v_ind = v_cognitive)\n```\n:::\n\n\nControlling for the cognitive predictors, did not alter our conclusion that the reading profile is unusual. It appears that the Reading scores are more unusual than about 18% of Reading profiles from people with the same specified cognitive predictor scores.\n\nWe can see that all three decoding tests are lower than expectations, particularly `RD2`, the reading comprehension tests are within expectations, though `RC3` is somewhat high.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nplot(dCM)\n```\n\n::: {.cell-output-display}\n![Conditional Distributions for Reading, Controlling for Cognitive Predictors](tutorial_unusualprofile_files/figure-html/fig-cond-reading-1.png){#fig-cond-reading width=100% height=100%}\n:::\n:::\n\n\n# Composite Score Model\n\nOften, all we need do is calculate the composite scores and see if they are within expectations.\n\nFirst, we specify the composite score variable names to be the same as they are in the `d_case` tibble.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Independent variable names\nv_cognitive_composite <- paste0(c(\"Ga\", \"Gc\"), \"_Composite\")\n# Dependent variable names\nv_reading_composite <- paste0(c(\"RD\", \"RC\"), \"_Composite\")\n```\n:::\n\n\nNow we plot the composite scores:\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Conditional Reading Profile\ncond_maha(data = d_case,\n          R = get_model_implied_correlations(m_reading, composites = TRUE),\n          v_dep = v_reading_composite,\n          v_ind = v_cognitive_composite,\n          mu = 100,\n          sigma = 15) %>%\n  plot()\n```\n\n::: {.cell-output-display}\n![Conditional Distributions for Reading Composites, Controlling for Cognitive Composites](tutorial_unusualprofile_files/figure-html/fig-composite-condmaha-1.png){#fig-composite-condmaha width=100% height=100%}\n:::\n:::\n\n\n# Observed Scores, Given Composite Scores\n\nSuppose that we want to know if the observed Gc scores are unusual, given the composite Gc score we have estimated.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncond_maha(\n  d_case,\n  R = get_model_implied_correlations(m_reading, composites = TRUE),\n  v_dep = c(v_cognitive, v_reading),\n  v_ind = c(v_cognitive_composite, v_reading_composite),\n  mu = 100,\n  sigma = 15\n) %>%\n  plot() +\n  theme(axis.text.x = element_text(angle = 45, hjust = 1))\n```\n\n::: {.cell-output-display}\n![](tutorial_unusualprofile_files/figure-html/fig-plotreadingobserved-1.png){#fig-plotreadingobserved width=100% height=100%}\n:::\n:::\n\n\n## Factor-score model\n\nFactor scores can be calculated calculated using Thurstone's method [@thurstone1935vectors]:\n\n$$\\hat{F}= R_{FF}\\Lambda_{FX} R_{XX}^{-1}X=R_{FX}R_{XX}^{-1}X$$\n\nWhere\n\n> $\\hat{F}$ is a vector of a person's estimated factor scores.\\\n> $R_{FF}$ is the correlation matrix among the latent factors.\\\n> $\\Lambda_{FX}$ is the matrix of loadings from factors to observed scores.\\\n> $R_{FX}$ is a correlation matrix between the common factors and the observed variables.\\\n> $R_{XX}^{-1}$ is the inverse of the correlation matrix among the observed variables.\\\n> $X$ is a vector of a person's standardized scores on the observed variables.\n\nFortunately, the `add_factor_scores` function from the [simstandard package](https://wjschne.github.io/simstandard/articles/simstandard_tutorial.html) can add factor scores to existing data. For each latent variable in the model, a factor score with \"`_FS`\" is appended to the variable name. Using the option `CI = TRUE` will produce the lower bounds (\"`_FS_LB`\") and upper bounds (\"`_FS_UB`\") of the factor scores' confidence intervals.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nd_case <- tibble(\n  Ga1 = 61,\n  Ga2 = 69,\n  Ga3 = 65,\n  Gc1 = 109,\n  Gc2 = 97,\n  Gc3 = 103,\n  RD1 = 77,\n  RD2 = 71,\n  RD3 = 81,\n  RC1 = 90,\n  RC2 = 99,\n  RC3 = 94\n) %>%\n  simstandard::add_factor_scores(m = m_reading,\n                                 mu = 100,\n                                 sigma = 15,\n                                 CI = TRUE)\n\nd_case %>%\n  select(contains(\"_FS\")) %>%\n  pivot_longer(everything(),\n               names_to = \"Variable\",\n               values_to = \"Score\") %>%\n  arrange(Variable)\n#> # A tibble: 12 × 2\n#>    Variable Score\n#>    <chr>    <dbl>\n#>  1 Ga_FS     66.0\n#>  2 Ga_FS_LB  59.4\n#>  3 Ga_FS_UB  72.7\n#>  4 Gc_FS     99.6\n#>  5 Gc_FS_LB  90.1\n#>  6 Gc_FS_UB 109. \n#>  7 RC_FS     91.9\n#>  8 RC_FS_LB  84.2\n#>  9 RC_FS_UB  99.6\n#> 10 RD_FS     75.4\n#> 11 RD_FS_LB  67.9\n#> 12 RD_FS_UB  82.8\n```\n:::\n\n\nBecause factor scores are estimates, they are presented with confidence intervals in @fig-factor-scores.\n\n\n::: {.cell}\n::: {.cell-output-display}\n![Estimated factor scores with 95% confidence intervals](tutorial_unusualprofile_files/figure-html/fig-factor-scores-1.png){#fig-factor-scores width=100% height=100%}\n:::\n:::\n\n\n\nThere are two ways we can think of factor scores. From one perspective, they are composite scores with each component given a different weight. \n\nFor example, to make factor scores for the reading model, one would use the factor-score coefficients presented in @fig-factor-score-coefficients. The matrix of factor-score coefficients can be obtained like so:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsimstandard::get_factor_score_coefficients(m_reading)\n```\n:::\n\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n![Factor score coefficients for the reading model](tutorial_unusualprofile_files/figure-html/fig-factor-score-coefficients-1.png){#fig-factor-score-coefficients width=100% height=100%}\n:::\n:::\n\n\n$$\n\\begin{split}\n\\text{Ga}=&.136\\text{Ga}_1&+.305\\text{Ga}_2&+.496\\text{Ga}_3&+\\\\\n&.014\\text{Gc}_1&+.005\\text{Gc}_2&+.011\\text{Gc}_3&+\\\\\n&.041\\text{RD}_1&+.021\\text{RD}_2&+.018\\text{RD}_3&+\\\\\n&.007\\text{RC}_1&+.004\\text{RC}_2&+.006\\text{RC}_3\n\\end{split}\n$$\n\nFactor scores generally have a smaller standard deviation than the latent scores they estimate. Instead, their standard deviation is proportional to their validity. If a factor score measures a latent score poorly, it strongly regresses to the mean, resulting in a much smaller variance than that of the latent variable. \n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Correlation matrix\nR_factor <- get_model_implied_correlations(m_reading,\n                                           factor_scores = TRUE)\n# Factor Score Validity\nfs_validity <- get_factor_score_validity(m_reading)\n\n# Model names\nm_names <- get_model_names(m_reading)\n\n# Observed score names\nob_names <- m_names$v_observed\n\n# Factor Score names\nfs_names <- m_names$v_factor_score\n\n# Standard Deviations\ns <- 15 * c(rep(1, length(ob_names)), fs_validity)\nnames(s) <- c(ob_names, names(fs_validity))\n\n# Plot\ncond_maha(\n  d_case,\n  R = R_factor,\n  mu = 100,\n  sigma = s,\n  v_dep = ob_names,\n  v_ind_composites = fs_names\n) %>%\n  plot()\n```\n\n::: {.cell-output-display}\n![](tutorial_unusualprofile_files/figure-html/display-reading1-1.png){width=100% height=100%}\n:::\n:::\n\n\nA second interpretation of the factor scores is that they are best estimates of a latent variable. Here, we get the model-implied correlation matrix of observed and latent variables (instead of factor score estimates).\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Get model-implied correlations of observed and latent variables\nR_latent <- get_model_implied_correlations(m_reading, latent = TRUE)\n\n# Latent variable names\nv_latent <- m_names$v_latent\n\n# Plot\nd_case %>%\n  rename_with(.fn = ~ str_remove(.x, \"_FS$\")) %>%\n  cond_maha(\n    R = R_latent,\n    mu = 100,\n    sigma = 15,\n    v_dep = ob_names,\n    v_ind = v_latent\n  ) %>%\n  plot()\n```\n\n::: {.cell-output-display}\n![Scores Conditions on Estimated Latent Scores](tutorial_unusualprofile_files/figure-html/fig-display-reading2-1.png){#fig-display-reading2 width=100% height=100%}\n:::\n:::\n\n\nNote that we had to rename the factor score variables from Ga_FS, Gc_FS, RD_FS, RC_FS to Ga, Gc, RD, RC. In addition, the latent variables are no longer composite variables, but independent variables. \n\n<!-- # Predicting a profile's extremity in a population -->\n\n<!-- $$d_{C M}=\\sqrt{(X-\\hat{X})'R_{XX}^{-1}(X-\\hat{X})}$$ -->\n\n<!-- Where -->\n\n<!-- > $\\hat{X}$ is the vector of predicted outcome scores (i.e., the predicted academic abilities predicted by the factor scores of cognitive abilities).\\ -->\n<!-- > $y$ is the vector of outcome scores (i.e., the factor scores of academic abilities estimated from our SEM).\\ -->\n<!-- > $R$ is the matrix of conditional variance among the factor scores (the composite correlation between factor scores calculated using population correlation among observed scores, that is, $\\beta'\\Sigma_{xx}\\beta$, where $\\beta=\\Sigma_{yx}\\Sigma_{xx}^{-1}$. -->\n\n<!-- If multivariate normality can be assumed and there are *k* outcome scores, -->\n\n<!-- $$d_{M_C}^{2} \\sim\\chi^{2}(k)$$ -->\n\n# References\n",
    "supporting": [
      "tutorial_unusualprofile_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-in-header": [
        "<script src=\"tutorial_unusualprofile_files/libs/kePrint-0.0.1/kePrint.js\"></script>\n<link href=\"tutorial_unusualprofile_files/libs/lightable-0.0.1/lightable.css\" rel=\"stylesheet\" />\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}